// <auto-generated />

using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.Threading.Tasks;
using System.ComponentModel;
using System.Runtime.Serialization;

namespace NHSBT.IRDP.Plugins.ProxyClasses
{
    [EntityLogicalNameAttribute("team")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XrmToolkit", "4.0")]
    [DataContract(Name = "Entity", Namespace = "http://schemas.microsoft.com/xrm/2011/Contracts")]
    public partial class Team : BaseProxyClass
    {
        public new const string LogicalName = "team";
        public const int ObjectTypeCode = 9;
        public const string PrimaryIdAttribute = "teamid";
        public const string PrimaryNameAttribute = "name";
        
        static Team()
        {
            BaseProxyClass.RegisterProxyType(typeof(Team), "team");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public Team() : base(new Entity("team")) { }
        public Team(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<Team>(); }
        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }
        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }
        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }
        private static Dictionary<string, eNumberOptions> _numberOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }

        ///<summary>
///<para>Logical Name: createdonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
public string CreatedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyidname")]
public string TransactionCurrencyIdName
{
	get { return this.GetPropertyValue<string>("transactioncurrencyidname"); }
}
///<summary>
///<para>Logical Name: queueidname</para>
///<para>Max Length: 400 characters</para>
///</summary>
[AttributeLogicalNameAttribute("queueidname")]
public string QueueIdName
{
	get { return this.GetPropertyValue<string>("queueidname"); }
}
///<summary>
///<para>Logical Name: nhs_accountyominame</para>
///<para>Max Length: 160 characters</para>
///</summary>
[AttributeLogicalNameAttribute("nhs_accountyominame")]
public string Nhs_AccountYomiName
{
	get { return this.GetPropertyValue<string>("nhs_accountyominame"); }
}
///<summary>
///<para>Logical Name: administratoridname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("administratoridname")]
public string AdministratorIdName
{
	get { return this.GetPropertyValue<string>("administratoridname"); }
}
///<summary>
///<para>Logical Name: organizationidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("organizationidname")]
public string OrganizationIdName
{
	get { return this.GetPropertyValue<string>("organizationidname"); }
}
///<summary>
///<para>Logical Name: createdbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyyominame")]
public string CreatedByYomiName
{
	get { return this.GetPropertyValue<string>("createdbyyominame"); }
}
///<summary>
///<para>Logical Name: nhs_accountname</para>
///<para>Max Length: 160 characters</para>
///</summary>
[AttributeLogicalNameAttribute("nhs_accountname")]
public string Nhs_AccountName
{
	get { return this.GetPropertyValue<string>("nhs_accountname"); }
}
///<summary>
///<para>Logical Name: modifiedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyname")]
public string ModifiedByName
{
	get { return this.GetPropertyValue<string>("modifiedbyname"); }
}
///<summary>
///<para>Logical Name: modifiedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyyominame")]
public string ModifiedByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedbyyominame"); }
}
///<summary>
///<para>Logical Name: administratoridyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("administratoridyominame")]
public string AdministratorIdYomiName
{
	get { return this.GetPropertyValue<string>("administratoridyominame"); }
}
///<summary>
///<para>Logical Name: businessunitidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("businessunitidname")]
public string BusinessUnitIdName
{
	get { return this.GetPropertyValue<string>("businessunitidname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
public string ModifiedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: createdbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyname")]
public string CreatedByName
{
	get { return this.GetPropertyValue<string>("createdbyname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyname")]
public string CreatedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
public string ModifiedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: stageid</para>
///</summary>
[AttributeLogicalNameAttribute("stageid")]
public Guid _Deprecated_ProcessStage
{
	get { return this.GetPropertyValue<Guid>("stageid"); }
	set { this.SetPropertyValue<Guid>("stageid", value, "_Deprecated_ProcessStage"); }
}
///<summary>
///<para>Logical Name: traversedpath</para>
///<para>Max Length: 1250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("traversedpath")]
public string _Deprecated_TraversedPath
{
	get { return this.GetPropertyValue<string>("traversedpath"); }
	set { this.SetPropertyValue("traversedpath", value, 1250, "_Deprecated_TraversedPath"); }
}
///<summary>
///<para>Logical Name: nhs_account</para>
///</summary>
[AttributeLogicalNameAttribute("nhs_account")]
public EntityReference Account
{
	get { return this.GetPropertyValue<EntityReference>("nhs_account"); }
	set { this.SetPropertyValue<EntityReference>("nhs_account", value, "Account"); }
}
///<summary>
///<para>Logical Name: administratorid</para>
///</summary>
[AttributeLogicalNameAttribute("administratorid")]
public EntityReference Administrator
{
	get { return this.GetPropertyValue<EntityReference>("administratorid"); }
	set { this.SetPropertyValue<EntityReference>("administratorid", value, "Administrator"); }
}
///<summary>
///<para>Logical Name: azureactivedirectoryobjectid</para>
///</summary>
[AttributeLogicalNameAttribute("azureactivedirectoryobjectid")]
public Guid AzureADObjectIdForAGroup
{
	get { return this.GetPropertyValue<Guid>("azureactivedirectoryobjectid"); }
	set { this.SetPropertyValue<Guid>("azureactivedirectoryobjectid", value, "AzureADObjectIdForAGroup"); }
}
///<summary>
///<para>Logical Name: businessunitid</para>
///</summary>
[AttributeLogicalNameAttribute("businessunitid")]
public EntityReference BusinessUnit
{
	get { return this.GetPropertyValue<EntityReference>("businessunitid"); }
	set { this.SetPropertyValue<EntityReference>("businessunitid", value, "BusinessUnit"); }
}
///<summary>
///<para>Logical Name: createdby</para>
///</summary>
[AttributeLogicalNameAttribute("createdby")]
public EntityReference CreatedBy
{
	get { return this.GetPropertyValue<EntityReference>("createdby"); }
}
///<summary>
///<para>Logical Name: createdonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfby")]
public EntityReference CreatedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("createdonbehalfby"); }
}
///<summary>
///<para>Logical Name: createdon</para>
///</summary>
[AttributeLogicalNameAttribute("createdon")]
public DateTime? CreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("createdon"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyid</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyid")]
public EntityReference Currency
{
	get { return this.GetPropertyValue<EntityReference>("transactioncurrencyid"); }
	set { this.SetPropertyValue<EntityReference>("transactioncurrencyid", value, "Currency"); }
}
///<summary>
///<para>Logical Name: queueid</para>
///</summary>
[AttributeLogicalNameAttribute("queueid")]
public EntityReference DefaultQueue
{
	get { return this.GetPropertyValue<EntityReference>("queueid"); }
	set { this.SetPropertyValue<EntityReference>("queueid", value, "DefaultQueue"); }
}
///<summary>
///<para>Logical Name: description</para>
///<para>Max Length: 2000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("description")]
public string Description
{
	get { return this.GetPropertyValue<string>("description"); }
	set { this.SetPropertyValue("description", value, 2000, "Description"); }
}
///<summary>
///<para>Logical Name: emailaddress</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("emailaddress")]
public string Email
{
	get { return this.GetPropertyValue<string>("emailaddress"); }
	set { this.SetPropertyValue("emailaddress", value, 100, "Email"); }
}
///<summary>
///<para>Logical Name: exchangerate</para>
///<para>Minimum Value: 0.0000000001</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 10</para>
///</summary>
[AttributeLogicalNameAttribute("exchangerate")]
public decimal? ExchangeRate
{
	get { return this.GetPropertyValue<decimal?>("exchangerate"); }
}
///<summary>
///<para>Logical Name: importsequencenumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("importsequencenumber")]
public int? ImportSequenceNumber
{
	get { return this.GetPropertyValue<int?>("importsequencenumber"); }
	set { this.SetPropertyValue("importsequencenumber", (int?)value, (int)-2147483648, (int)2147483647, "ImportSequenceNumber"); }
}
///<summary>
///<para>Logical Name: isdefault</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isdefault")]
public bool? IsDefault
{
	get { return this.GetPropertyValue<bool?>("isdefault"); }
}
///<summary>
///<para>Logical Name: systemmanaged</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("systemmanaged")]
public bool? IsSystemManaged
{
	get { return this.GetPropertyValue<bool?>("systemmanaged"); }
}
///<summary>
///<para>Logical Name: modifiedby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedby")]
public EntityReference ModifiedBy
{
	get { return this.GetPropertyValue<EntityReference>("modifiedby"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfby")]
public EntityReference ModifiedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("modifiedonbehalfby"); }
}
///<summary>
///<para>Logical Name: modifiedon</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedon")]
public DateTime? ModifiedOn
{
	get { return this.GetPropertyValue<DateTime?>("modifiedon"); }
}
///<summary>
///<para>Logical Name: organizationid</para>
///</summary>
[AttributeLogicalNameAttribute("organizationid")]
public Guid Organization
{
	get { return this.GetPropertyValue<Guid>("organizationid"); }
}
///<summary>
///<para>Logical Name: processid</para>
///</summary>
[AttributeLogicalNameAttribute("processid")]
public Guid Process
{
	get { return this.GetPropertyValue<Guid>("processid"); }
	set { this.SetPropertyValue<Guid>("processid", value, "Process"); }
}
///<summary>
///<para>Logical Name: overriddencreatedon</para>
///</summary>
[AttributeLogicalNameAttribute("overriddencreatedon")]
public DateTime? RecordCreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("overriddencreatedon"); }
	set { this.SetPropertyValue<DateTime?>("overriddencreatedon", value, "RecordCreatedOn"); }
}
///<summary>
///<para>Logical Name: regardingobjectid</para>
///</summary>
[AttributeLogicalNameAttribute("regardingobjectid")]
public EntityReference RegardingObjectId
{
	get { return this.GetPropertyValue<EntityReference>("regardingobjectid"); }
	set { this.SetPropertyValue<EntityReference>("regardingobjectid", value, "RegardingObjectId"); }
}
///<summary>
///<para>Logical Name: regardingobjecttypecode</para>
///</summary>
[AttributeLogicalNameAttribute("regardingobjecttypecode")]
public string RegardingObjectType
{
	get { return this.GetPropertyValue<string>("regardingobjecttypecode"); }
	set { this.SetPropertyValue<string>("regardingobjecttypecode", value, "RegardingObjectType"); }
}
///<summary>
///<para>Key Property (Uniqueidentifier)</para>
///<para>Logical Name: teamid</para>
///</summary>
[AttributeLogicalNameAttribute("teamid")]
public Guid TeamId
{
	get
	{
		return base.Id;
	}
	set
	{
		base.Id = value;
		base.SetPropertyValue("teamid", value, "TeamId");
	}
}
///<summary>
///<para>Logical Name: name</para>
///<para>Max Length: 160 characters</para>
///</summary>
[AttributeLogicalNameAttribute("name")]
public string TeamName
{
	get { return this.GetPropertyValue<string>("name"); }
	set { this.SetPropertyValue("name", value, 160, "TeamName"); }
}
///<summary>
///<para>Logical Name: teamtemplateid</para>
///</summary>
[AttributeLogicalNameAttribute("teamtemplateid")]
public EntityReference TeamTemplateIdentifier
{
	get { return this.GetPropertyValue<EntityReference>("teamtemplateid"); }
	set { this.SetPropertyValue<EntityReference>("teamtemplateid", value, "TeamTemplateIdentifier"); }
}
/// <summary>
///Logical Name: teamtype
/// </summary>
[AttributeLogicalNameAttribute("teamtype")]
public eTeamType? TeamType
{
	get
	{
		if (TeamType_OptionSetValue != null) { return (eTeamType)TeamType_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.TeamType_OptionSetValue = new OptionSetValue((int)value); }
		else this.TeamType_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: teamtype</para>
///</summary>
[AttributeLogicalNameAttribute("teamtype")]
public OptionSetValue TeamType_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("teamtype"); }
	set { this.SetPropertyValue<OptionSetValue>("teamtype", value, "TeamType_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string TeamType_Text(IOrganizationService Service)
{
	return this.TeamType_OptionSetValue.GetOptionSetText(Service, this, "teamtype");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string TeamType_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.TeamType_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: versionnumber</para>
///</summary>
[AttributeLogicalNameAttribute("versionnumber")]
public int? VersionNumber
{
	get { return this.GetPropertyValue<int?>("versionnumber"); }
}
///<summary>
///<para>Logical Name: yominame</para>
///<para>Max Length: 160 characters</para>
///</summary>
[AttributeLogicalNameAttribute("yominame")]
public string YomiName
{
	get { return this.GetPropertyValue<string>("yominame"); }
	set { this.SetPropertyValue("yominame", value, 160, "YomiName"); }
}


        /// <summary>
/// <para><b>Account (Team)</b></para>
/// <para>Schema Name: nhs_team_account_Team</para>
/// </summary>
public List<Account> GetAccounts_Team (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Account>(Service, this.Id, "account", "nhs_team", Columns); }
/// <summary>
/// <para><b>Account (Team)</b></para>
/// <para>Schema Name: nhs_team_account_Team</para>
/// </summary>
public List<Account> GetAccounts_Team (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Account>(Service, this.Id, "account", "nhs_team", Columns); }
/// <summary>
/// <para><b>Account (Owning Team)</b></para>
/// <para>Schema Name: team_accounts</para>
/// </summary>
public List<Account> GetAccounts_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Account>(Service, this.Id, "account", "owningteam", Columns); }
/// <summary>
/// <para><b>Account (Owning Team)</b></para>
/// <para>Schema Name: team_accounts</para>
/// </summary>
public List<Account> GetAccounts_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Account>(Service, this.Id, "account", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_actioncardusersettings</para>
/// </summary>
public List<Entity> GetActionCardUserSettings (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "actioncardusersettings", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_actioncardusersettings</para>
/// </summary>
public List<Entity> GetActionCardUserSettings (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "actioncardusersettings", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_activity</para>
/// </summary>
public List<Entity> GetActivities (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "activitypointer", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_activity</para>
/// </summary>
public List<Entity> GetActivities (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "activitypointer", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_adminsettingsentity</para>
/// </summary>
public List<Entity> Getadmin_settings_entities (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adminsettingsentity", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_adminsettingsentity</para>
/// </summary>
public List<Entity> Getadmin_settings_entities (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adminsettingsentity", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_annotations</para>
/// </summary>
public List<Entity> GetNotes (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "annotation", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_annotations</para>
/// </summary>
public List<Entity> GetNotes (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "annotation", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_appointment</para>
/// </summary>
public List<Entity> GetAppointments (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "appointment", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_appointment</para>
/// </summary>
public List<Entity> GetAppointments (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "appointment", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_asyncoperation</para>
/// </summary>
public List<Entity> GetSystemJobs (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "asyncoperation", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_asyncoperation</para>
/// </summary>
public List<Entity> GetSystemJobs (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "asyncoperation", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Team_AsyncOperations</para>
/// </summary>
public List<Entity> GetSystemJobs2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Team_AsyncOperations</para>
/// </summary>
public List<Entity> GetSystemJobs2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_bookableresource</para>
/// </summary>
public List<Entity> GetBookableResources (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bookableresource", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_bookableresource</para>
/// </summary>
public List<Entity> GetBookableResources (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bookableresource", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_bookableresourcebooking</para>
/// </summary>
public List<Entity> GetBookableResourceBookings (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bookableresourcebooking", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_bookableresourcebooking</para>
/// </summary>
public List<Entity> GetBookableResourceBookings (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bookableresourcebooking", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_bookableresourcebookingexchangesyncidmapping</para>
/// </summary>
public List<Entity> GetBookableResourceBookingToExchangeIdMappings (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bookableresourcebookingexchangesyncidmapping", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_bookableresourcebookingexchangesyncidmapping</para>
/// </summary>
public List<Entity> GetBookableResourceBookingToExchangeIdMappings (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bookableresourcebookingexchangesyncidmapping", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_bookableresourcebookingheader</para>
/// </summary>
public List<Entity> GetBookableResourceBookingHeaders (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bookableresourcebookingheader", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_bookableresourcebookingheader</para>
/// </summary>
public List<Entity> GetBookableResourceBookingHeaders (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bookableresourcebookingheader", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_bookableresourcecategory</para>
/// </summary>
public List<Entity> GetBookableResourceCategories (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bookableresourcecategory", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_bookableresourcecategory</para>
/// </summary>
public List<Entity> GetBookableResourceCategories (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bookableresourcecategory", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_bookableresourcecategoryassn</para>
/// </summary>
public List<Entity> GetBookableResourceCategoryAssns (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bookableresourcecategoryassn", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_bookableresourcecategoryassn</para>
/// </summary>
public List<Entity> GetBookableResourceCategoryAssns (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bookableresourcecategoryassn", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_bookableresourcecharacteristic</para>
/// </summary>
public List<Entity> GetBookableResourceCharacteristics (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bookableresourcecharacteristic", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_bookableresourcecharacteristic</para>
/// </summary>
public List<Entity> GetBookableResourceCharacteristics (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bookableresourcecharacteristic", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_bookableresourcegroup</para>
/// </summary>
public List<Entity> GetBookableResourceGroups (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bookableresourcegroup", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_bookableresourcegroup</para>
/// </summary>
public List<Entity> GetBookableResourceGroups (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bookableresourcegroup", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_bookingstatus</para>
/// </summary>
public List<Entity> GetBookingStatuses (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bookingstatus", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_bookingstatus</para>
/// </summary>
public List<Entity> GetBookingStatuses (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bookingstatus", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Team_BulkDeleteFailures</para>
/// </summary>
public List<Entity> GetBulkDeleteFailures (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Team_BulkDeleteFailures</para>
/// </summary>
public List<Entity> GetBulkDeleteFailures (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_BulkOperation</para>
/// </summary>
public List<Entity> GetQuickCampaigns (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bulkoperation", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_BulkOperation</para>
/// </summary>
public List<Entity> GetQuickCampaigns (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bulkoperation", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_bulkoperationlog</para>
/// </summary>
public List<Entity> GetBulkOperationLogs (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bulkoperationlog", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_bulkoperationlog</para>
/// </summary>
public List<Entity> GetBulkOperationLogs (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bulkoperationlog", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_Campaigns</para>
/// </summary>
public List<Entity> GetCampaigns (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "campaign", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_Campaigns</para>
/// </summary>
public List<Entity> GetCampaigns (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "campaign", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_campaignactivity</para>
/// </summary>
public List<Entity> GetCampaignActivities (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "campaignactivity", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_campaignactivity</para>
/// </summary>
public List<Entity> GetCampaignActivities (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "campaignactivity", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_campaignresponse</para>
/// </summary>
public List<Entity> GetCampaignResponses (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "campaignresponse", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_campaignresponse</para>
/// </summary>
public List<Entity> GetCampaignResponses (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "campaignresponse", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_channelaccessprofile</para>
/// </summary>
public List<Entity> GetChannelAccessProfiles (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "channelaccessprofile", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_channelaccessprofile</para>
/// </summary>
public List<Entity> GetChannelAccessProfiles (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "channelaccessprofile", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_profilerule</para>
/// </summary>
public List<Entity> GetChannelAccessProfileRules (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "channelaccessprofilerule", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_profilerule</para>
/// </summary>
public List<Entity> GetChannelAccessProfileRules (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "channelaccessprofilerule", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_characteristic</para>
/// </summary>
public List<Entity> GetCharacteristics (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "characteristic", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_characteristic</para>
/// </summary>
public List<Entity> GetCharacteristics (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "characteristic", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_connections1</para>
/// </summary>
public List<Entity> GetConnections (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_connections1</para>
/// </summary>
public List<Entity> GetConnections (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_connections2</para>
/// </summary>
public List<Entity> GetConnections2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_connections2</para>
/// </summary>
public List<Entity> GetConnections2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_connector</para>
/// </summary>
public List<Entity> GetConnectors (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "connector", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_connector</para>
/// </summary>
public List<Entity> GetConnectors (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "connector", "owningteam", Columns); }
/// <summary>
/// <para><b>Contact (Owning Team)</b></para>
/// <para>Schema Name: team_contacts</para>
/// </summary>
public List<Contact> GetContacts_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Contact>(Service, this.Id, "contact", "owningteam", Columns); }
/// <summary>
/// <para><b>Contact (Owning Team)</b></para>
/// <para>Schema Name: team_contacts</para>
/// </summary>
public List<Contact> GetContacts_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Contact>(Service, this.Id, "contact", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_service_contracts</para>
/// </summary>
public List<Entity> GetContracts (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "contract", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_service_contracts</para>
/// </summary>
public List<Entity> GetContracts (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "contract", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_contractdetail</para>
/// </summary>
public List<Entity> GetContractLines (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "contractdetail", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_contractdetail</para>
/// </summary>
public List<Entity> GetContractLines (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "contractdetail", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_convertrule</para>
/// </summary>
public List<Entity> GetRecordCreationAndUpdateRules (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "convertrule", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_convertrule</para>
/// </summary>
public List<Entity> GetRecordCreationAndUpdateRules (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "convertrule", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_customer_opportunity_roles</para>
/// </summary>
public List<Entity> GetOpportunityRelationships (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "customeropportunityrole", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_customer_opportunity_roles</para>
/// </summary>
public List<Entity> GetOpportunityRelationships (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "customeropportunityrole", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_customer_relationship</para>
/// </summary>
public List<Entity> GetCustomerRelationships (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "customerrelationship", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_customer_relationship</para>
/// </summary>
public List<Entity> GetCustomerRelationships (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "customerrelationship", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Team_DuplicateBaseRecord</para>
/// </summary>
public List<Entity> GetDuplicateRecords (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Team_DuplicateBaseRecord</para>
/// </summary>
public List<Entity> GetDuplicateRecords (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Team_DuplicateMatchingRecord</para>
/// </summary>
public List<Entity> GetDuplicateRecords2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Team_DuplicateMatchingRecord</para>
/// </summary>
public List<Entity> GetDuplicateRecords2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_DuplicateRules</para>
/// </summary>
public List<Entity> GetDuplicateDetectionRules (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "duplicaterule", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_DuplicateRules</para>
/// </summary>
public List<Entity> GetDuplicateDetectionRules (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "duplicaterule", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_DynamicPropertyInstance</para>
/// </summary>
public List<Entity> GetPropertyInstances (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "dynamicpropertyinstance", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_DynamicPropertyInstance</para>
/// </summary>
public List<Entity> GetPropertyInstances (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "dynamicpropertyinstance", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_email</para>
/// </summary>
public List<Entity> GetEmailMessages (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "email", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_email</para>
/// </summary>
public List<Entity> GetEmailMessages (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "email", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_emailserverprofile</para>
/// </summary>
public List<Entity> GetEmailServerProfiles (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "emailserverprofile", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_emailserverprofile</para>
/// </summary>
public List<Entity> GetEmailServerProfiles (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "emailserverprofile", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_entitlement</para>
/// </summary>
public List<Entity> GetEntitlements (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "entitlement", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_entitlement</para>
/// </summary>
public List<Entity> GetEntitlements (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "entitlement", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_entitlementchannel</para>
/// </summary>
public List<Entity> GetEntitlementChannels (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "entitlementchannel", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_entitlementchannel</para>
/// </summary>
public List<Entity> GetEntitlementChannels (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "entitlementchannel", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_entitlemententityallocationtypemapping</para>
/// </summary>
public List<Entity> GetEntitlementEntityAllocationTypeMappings (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "entitlemententityallocationtypemapping", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_entitlemententityallocationtypemapping</para>
/// </summary>
public List<Entity> GetEntitlementEntityAllocationTypeMappings (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "entitlemententityallocationtypemapping", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_environmentvariabledefinition</para>
/// </summary>
public List<Entity> GetEnvironmentVariableDefinitions (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "environmentvariabledefinition", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_environmentvariabledefinition</para>
/// </summary>
public List<Entity> GetEnvironmentVariableDefinitions (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "environmentvariabledefinition", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_environmentvariablevalue</para>
/// </summary>
public List<Entity> GetEnvironmentVariableValues (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "environmentvariablevalue", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_environmentvariablevalue</para>
/// </summary>
public List<Entity> GetEnvironmentVariableValues (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "environmentvariablevalue", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_exchangesyncidmapping</para>
/// </summary>
public List<Entity> GetExchangeSyncIdMappings (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "exchangesyncidmapping", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_exchangesyncidmapping</para>
/// </summary>
public List<Entity> GetExchangeSyncIdMappings (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "exchangesyncidmapping", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_externalparty</para>
/// </summary>
public List<Entity> GetExternalParties (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "externalparty", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_externalparty</para>
/// </summary>
public List<Entity> GetExternalParties (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "externalparty", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_fax</para>
/// </summary>
public List<Entity> GetFaxes (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "fax", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_fax</para>
/// </summary>
public List<Entity> GetFaxes (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "fax", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_flowsession</para>
/// </summary>
public List<Entity> GetFlowSessions (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "flowsession", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_flowsession</para>
/// </summary>
public List<Entity> GetFlowSessions (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "flowsession", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_goal</para>
/// </summary>
public List<Entity> GetGoals (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "goal", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_goal</para>
/// </summary>
public List<Entity> GetGoals (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "goal", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_goal_goalowner</para>
/// </summary>
public List<Entity> GetGoals2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "goal", "goalownerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_goal_goalowner</para>
/// </summary>
public List<Entity> GetGoals2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "goal", "goalownerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_goalrollupquery</para>
/// </summary>
public List<Entity> GetRollupQueries (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "goalrollupquery", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_goalrollupquery</para>
/// </summary>
public List<Entity> GetRollupQueries (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "goalrollupquery", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_Imports</para>
/// </summary>
public List<Entity> GetDataImports (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "import", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_Imports</para>
/// </summary>
public List<Entity> GetDataImports (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "import", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_ImportData</para>
/// </summary>
public List<Entity> GetImportData (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "importdata", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_ImportData</para>
/// </summary>
public List<Entity> GetImportData (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "importdata", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: ImportFile_Team</para>
/// </summary>
public List<Entity> GetImports (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "importfile", "recordsownerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: ImportFile_Team</para>
/// </summary>
public List<Entity> GetImports (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "importfile", "recordsownerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_ImportFiles</para>
/// </summary>
public List<Entity> GetImports2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "importfile", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_ImportFiles</para>
/// </summary>
public List<Entity> GetImports2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "importfile", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_ImportLogs</para>
/// </summary>
public List<Entity> GetImportLogs (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "importlog", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_ImportLogs</para>
/// </summary>
public List<Entity> GetImportLogs (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "importlog", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_ImportMaps</para>
/// </summary>
public List<Entity> GetDataMaps (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "importmap", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_ImportMaps</para>
/// </summary>
public List<Entity> GetDataMaps (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "importmap", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_incidents</para>
/// </summary>
public List<Entity> GetCases (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "incident", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_incidents</para>
/// </summary>
public List<Entity> GetCases (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "incident", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_incidentresolution</para>
/// </summary>
public List<Entity> GetCaseResolutions (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "incidentresolution", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_incidentresolution</para>
/// </summary>
public List<Entity> GetCaseResolutions (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "incidentresolution", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_interactionforemail</para>
/// </summary>
public List<Entity> GetInteractionsForEmail (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "interactionforemail", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_interactionforemail</para>
/// </summary>
public List<Entity> GetInteractionsForEmail (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "interactionforemail", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_invoices</para>
/// </summary>
public List<Entity> GetInvoices (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "invoice", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_invoices</para>
/// </summary>
public List<Entity> GetInvoices (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "invoice", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_invoicedetail</para>
/// </summary>
public List<Entity> GetInvoiceProducts (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "invoicedetail", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_invoicedetail</para>
/// </summary>
public List<Entity> GetInvoiceProducts (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "invoicedetail", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_knowledgearticle</para>
/// </summary>
public List<Entity> GetKnowledgeArticles (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "knowledgearticle", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_knowledgearticle</para>
/// </summary>
public List<Entity> GetKnowledgeArticles (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "knowledgearticle", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_knowledgearticleincident</para>
/// </summary>
public List<Entity> GetKnowledgeArticleIncidents (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "knowledgearticleincident", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_knowledgearticleincident</para>
/// </summary>
public List<Entity> GetKnowledgeArticleIncidents (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "knowledgearticleincident", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: lead_owning_team</para>
/// </summary>
public List<Entity> GetLeads (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "lead", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: lead_owning_team</para>
/// </summary>
public List<Entity> GetLeads (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "lead", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_letter</para>
/// </summary>
public List<Entity> GetLetters (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "letter", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_letter</para>
/// </summary>
public List<Entity> GetLetters (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "letter", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_list</para>
/// </summary>
public List<Entity> GetMarketingLists (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "list", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_list</para>
/// </summary>
public List<Entity> GetMarketingLists (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "list", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_mailbox</para>
/// </summary>
public List<Entity> GetMailboxes (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "mailbox", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_mailbox</para>
/// </summary>
public List<Entity> GetMailboxes (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "mailbox", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_mailboxtrackingcategory</para>
/// </summary>
public List<Entity> GetMailboxTrackingCategories (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "mailboxtrackingcategory", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_mailboxtrackingcategory</para>
/// </summary>
public List<Entity> GetMailboxTrackingCategories (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "mailboxtrackingcategory", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_mailboxtrackingfolder</para>
/// </summary>
public List<Entity> GetMailboxAutoTrackingFolders (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "mailboxtrackingfolder", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_mailboxtrackingfolder</para>
/// </summary>
public List<Entity> GetMailboxAutoTrackingFolders (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "mailboxtrackingfolder", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_actioncardregarding</para>
/// </summary>
public List<Entity> GetActionCardRegardings (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_actioncardregarding", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_actioncardregarding</para>
/// </summary>
public List<Entity> GetActionCardRegardings (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_actioncardregarding", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_actioncardrolesetting</para>
/// </summary>
public List<Entity> GetActionCardRoleSettings (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_actioncardrolesetting", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_actioncardrolesetting</para>
/// </summary>
public List<Entity> GetActionCardRoleSettings (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_actioncardrolesetting", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_aiconfiguration</para>
/// </summary>
public List<Entity> GetAIConfigurations (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_aiconfiguration", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_aiconfiguration</para>
/// </summary>
public List<Entity> GetAIConfigurations (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_aiconfiguration", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_aifptrainingdocument</para>
/// </summary>
public List<Entity> GetAIFormProcessingDocument (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_aifptrainingdocument", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_aifptrainingdocument</para>
/// </summary>
public List<Entity> GetAIFormProcessingDocument (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_aifptrainingdocument", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_aimodel</para>
/// </summary>
public List<Entity> GetAIModels (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_aimodel", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_aimodel</para>
/// </summary>
public List<Entity> GetAIModels (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_aimodel", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_aiodimage</para>
/// </summary>
public List<Entity> GetAIObjectDetectionImages (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_aiodimage", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_aiodimage</para>
/// </summary>
public List<Entity> GetAIObjectDetectionImages (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_aiodimage", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_aiodlabel</para>
/// </summary>
public List<Entity> GetAIObjectDetectionLabels (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_aiodlabel", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_aiodlabel</para>
/// </summary>
public List<Entity> GetAIObjectDetectionLabels (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_aiodlabel", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_aiodtrainingboundingbox</para>
/// </summary>
public List<Entity> GetAIObjectDetectionBoundingBoxes (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_aiodtrainingboundingbox", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_aiodtrainingboundingbox</para>
/// </summary>
public List<Entity> GetAIObjectDetectionBoundingBoxes (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_aiodtrainingboundingbox", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_aiodtrainingimage</para>
/// </summary>
public List<Entity> GetAIObjectDetectionImageMappings (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_aiodtrainingimage", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_aiodtrainingimage</para>
/// </summary>
public List<Entity> GetAIObjectDetectionImageMappings (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_aiodtrainingimage", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_aitemplate</para>
/// </summary>
public List<Entity> GetAITemplates (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_aitemplate", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_aitemplate</para>
/// </summary>
public List<Entity> GetAITemplates (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_aitemplate", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_analysiscomponent</para>
/// </summary>
public List<Entity> GetAnalysisComponents (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_analysiscomponent", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_analysiscomponent</para>
/// </summary>
public List<Entity> GetAnalysisComponents (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_analysiscomponent", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_analysisjob</para>
/// </summary>
public List<Entity> GetAnalysisJobs (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_analysisjob", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_analysisjob</para>
/// </summary>
public List<Entity> GetAnalysisJobs (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_analysisjob", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_analysisresult</para>
/// </summary>
public List<Entity> GetAnalysisResults (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_analysisresult", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_analysisresult</para>
/// </summary>
public List<Entity> GetAnalysisResults (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_analysisresult", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_analysisresultdetail</para>
/// </summary>
public List<Entity> GetAnalysisResultDetails (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_analysisresultdetail", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_analysisresultdetail</para>
/// </summary>
public List<Entity> GetAnalysisResultDetails (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_analysisresultdetail", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_autocapturerule</para>
/// </summary>
public List<Entity> GetAutoCaptureRules (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_autocapturerule", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_autocapturerule</para>
/// </summary>
public List<Entity> GetAutoCaptureRules (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_autocapturerule", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_autocapturesettings</para>
/// </summary>
public List<Entity> Getautocapturesettings (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_autocapturesettings", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_autocapturesettings</para>
/// </summary>
public List<Entity> Getautocapturesettings (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_autocapturesettings", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_callablecontext</para>
/// </summary>
public List<Entity> GetPlaybookCallableContexts (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_callablecontext", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_callablecontext</para>
/// </summary>
public List<Entity> GetPlaybookCallableContexts (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_callablecontext", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_entityrankingrule</para>
/// </summary>
public List<Entity> GetEntityRankingRules (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_entityrankingrule", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_entityrankingrule</para>
/// </summary>
public List<Entity> GetEntityRankingRules (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_entityrankingrule", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_flowcardtype</para>
/// </summary>
public List<Entity> Getflowcardtypes (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_flowcardtype", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_flowcardtype</para>
/// </summary>
public List<Entity> Getflowcardtypes (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_flowcardtype", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_forecastconfiguration</para>
/// </summary>
public List<Entity> GetForecastConfigurations (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_forecastconfiguration", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_forecastconfiguration</para>
/// </summary>
public List<Entity> GetForecastConfigurations (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_forecastconfiguration", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_forecastdefinition</para>
/// </summary>
public List<Entity> GetForecastDefinitions (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_forecastdefinition", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_forecastdefinition</para>
/// </summary>
public List<Entity> GetForecastDefinitions (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_forecastdefinition", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_forecastinstance</para>
/// </summary>
public List<Entity> GetForecasts (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_forecastinstance", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_forecastinstance</para>
/// </summary>
public List<Entity> GetForecasts (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_forecastinstance", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_forecastrecurrence</para>
/// </summary>
public List<Entity> GetForecastRecurrences (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_forecastrecurrence", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_forecastrecurrence</para>
/// </summary>
public List<Entity> GetForecastRecurrences (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_forecastrecurrence", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_icebreakersconfig</para>
/// </summary>
public List<Entity> Geticebreakersconfigs (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_icebreakersconfig", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_icebreakersconfig</para>
/// </summary>
public List<Entity> Geticebreakersconfigs (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_icebreakersconfig", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_knowledgearticleimage</para>
/// </summary>
public List<Entity> GetKnowledgeArticleImages (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_knowledgearticleimage", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_knowledgearticleimage</para>
/// </summary>
public List<Entity> GetKnowledgeArticleImages (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_knowledgearticleimage", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_knowledgearticletemplate</para>
/// </summary>
public List<Entity> GetKnowledgeArticleTemplates (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_knowledgearticletemplate", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_knowledgearticletemplate</para>
/// </summary>
public List<Entity> GetKnowledgeArticleTemplates (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_knowledgearticletemplate", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_msteamssetting</para>
/// </summary>
public List<Entity> Getmsdyn_msteamssetting (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_msteamssetting", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_msteamssetting</para>
/// </summary>
public List<Entity> Getmsdyn_msteamssetting (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_msteamssetting", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_notesanalysisconfig</para>
/// </summary>
public List<Entity> GetNotesAnalysisConfigs (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_notesanalysisconfig", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_notesanalysisconfig</para>
/// </summary>
public List<Entity> GetNotesAnalysisConfigs (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_notesanalysisconfig", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_playbookactivity</para>
/// </summary>
public List<Entity> GetPlaybookActivities (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_playbookactivity", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_playbookactivity</para>
/// </summary>
public List<Entity> GetPlaybookActivities (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_playbookactivity", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_playbookactivityattribute</para>
/// </summary>
public List<Entity> GetPlaybookActivityAttributes (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_playbookactivityattribute", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_playbookactivityattribute</para>
/// </summary>
public List<Entity> GetPlaybookActivityAttributes (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_playbookactivityattribute", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_playbookcategory</para>
/// </summary>
public List<Entity> GetPlaybookCategories (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_playbookcategory", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_playbookcategory</para>
/// </summary>
public List<Entity> GetPlaybookCategories (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_playbookcategory", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_playbookinstance</para>
/// </summary>
public List<Entity> GetPlaybooks (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_playbookinstance", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_playbookinstance</para>
/// </summary>
public List<Entity> GetPlaybooks (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_playbookinstance", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_playbooktemplate</para>
/// </summary>
public List<Entity> GetPlaybookTemplates (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_playbooktemplate", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_playbooktemplate</para>
/// </summary>
public List<Entity> GetPlaybookTemplates (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_playbooktemplate", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_postalbum</para>
/// </summary>
public List<Entity> GetProfileAlbums (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_postalbum", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_postalbum</para>
/// </summary>
public List<Entity> GetProfileAlbums (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_postalbum", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_relationshipinsightsunifiedconfig</para>
/// </summary>
public List<Entity> Getmsdyn_relationshipinsightsunifiedconfigs (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_relationshipinsightsunifiedconfig", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_relationshipinsightsunifiedconfig</para>
/// </summary>
public List<Entity> Getmsdyn_relationshipinsightsunifiedconfigs (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_relationshipinsightsunifiedconfig", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_salesinsightssettings</para>
/// </summary>
public List<Entity> Getsalesinsightssettings (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_salesinsightssettings", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_salesinsightssettings</para>
/// </summary>
public List<Entity> Getsalesinsightssettings (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_salesinsightssettings", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_siconfig</para>
/// </summary>
public List<Entity> Getsiconfig (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_siconfig", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_siconfig</para>
/// </summary>
public List<Entity> Getsiconfig (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_siconfig", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_solutionhealthrule</para>
/// </summary>
public List<Entity> GetSolutionHealthRules (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_solutionhealthrule", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_solutionhealthrule</para>
/// </summary>
public List<Entity> GetSolutionHealthRules (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_solutionhealthrule", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_solutionhealthruleargument</para>
/// </summary>
public List<Entity> GetSolutionHealthRuleArguments (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_solutionhealthruleargument", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_solutionhealthruleargument</para>
/// </summary>
public List<Entity> GetSolutionHealthRuleArguments (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_solutionhealthruleargument", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_untrackedappointment</para>
/// </summary>
public List<Entity> GetUntrackedAppointments (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_untrackedappointment", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_untrackedappointment</para>
/// </summary>
public List<Entity> GetUntrackedAppointments (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_untrackedappointment", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_wallsavedqueryusersettings</para>
/// </summary>
public List<Entity> GetFilters (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_wallsavedqueryusersettings", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msdyn_wallsavedqueryusersettings</para>
/// </summary>
public List<Entity> GetFilters (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_wallsavedqueryusersettings", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msfp_emailtemplate</para>
/// </summary>
public List<Entity> GetFormsProSurveyEmailTemplates (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msfp_emailtemplate", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msfp_emailtemplate</para>
/// </summary>
public List<Entity> GetFormsProSurveyEmailTemplates (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msfp_emailtemplate", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msfp_question</para>
/// </summary>
public List<Entity> GetFormsProSurveyQuestions (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msfp_question", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msfp_question</para>
/// </summary>
public List<Entity> GetFormsProSurveyQuestions (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msfp_question", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msfp_questionresponse</para>
/// </summary>
public List<Entity> GetFormsProSurveyQuestionResponses (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msfp_questionresponse", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msfp_questionresponse</para>
/// </summary>
public List<Entity> GetFormsProSurveyQuestionResponses (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msfp_questionresponse", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msfp_survey</para>
/// </summary>
public List<Entity> GetFormsProSurveys (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msfp_survey", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msfp_survey</para>
/// </summary>
public List<Entity> GetFormsProSurveys (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msfp_survey", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msfp_surveyinvite_team_owningteam</para>
/// </summary>
public List<Entity> GetFormsProSurveyInvites (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msfp_surveyinvite", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msfp_surveyinvite_team_owningteam</para>
/// </summary>
public List<Entity> GetFormsProSurveyInvites (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msfp_surveyinvite", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msfp_surveyresponse_team_owningteam</para>
/// </summary>
public List<Entity> GetFormsProSurveyResponses (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msfp_surveyresponse", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msfp_surveyresponse_team_owningteam</para>
/// </summary>
public List<Entity> GetFormsProSurveyResponses (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msfp_surveyresponse", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msfp_unsubscribedrecipient</para>
/// </summary>
public List<Entity> GetFormsProUnsubscribedRecipients (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msfp_unsubscribedrecipient", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_msfp_unsubscribedrecipient</para>
/// </summary>
public List<Entity> GetFormsProUnsubscribedRecipients (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msfp_unsubscribedrecipient", "owningteam", Columns); }
/// <summary>
/// <para><b>Antigen_SourceAssociation (Owning Team)</b></para>
/// <para>Schema Name: team_nhs_antigensourceassociation</para>
/// </summary>
public List<Antigen_SourceAssociation> GetAntigen_SourceAssociations_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Antigen_SourceAssociation>(Service, this.Id, "nhs_antigensourceassociation", "owningteam", Columns); }
/// <summary>
/// <para><b>Antigen_SourceAssociation (Owning Team)</b></para>
/// <para>Schema Name: team_nhs_antigensourceassociation</para>
/// </summary>
public List<Antigen_SourceAssociation> GetAntigen_SourceAssociations_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Antigen_SourceAssociation>(Service, this.Id, "nhs_antigensourceassociation", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity (Owning Team)</b></para>
/// <para>Schema Name: team_nhs_rarebloodsource</para>
/// </summary>
public List<Entity> GetRareBloodSources_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "nhs_rarebloodsource", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity (Owning Team)</b></para>
/// <para>Schema Name: team_nhs_rarebloodsource</para>
/// </summary>
public List<Entity> GetRareBloodSources_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "nhs_rarebloodsource", "owningteam", Columns); }
/// <summary>
/// <para><b>Rarity_SourceAssociation (Owning Team)</b></para>
/// <para>Schema Name: team_nhs_raritysourceassociation</para>
/// </summary>
public List<Rarity_SourceAssociation> GetRarity_SourceAssociations_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Rarity_SourceAssociation>(Service, this.Id, "nhs_raritysourceassociation", "owningteam", Columns); }
/// <summary>
/// <para><b>Rarity_SourceAssociation (Owning Team)</b></para>
/// <para>Schema Name: team_nhs_raritysourceassociation</para>
/// </summary>
public List<Rarity_SourceAssociation> GetRarity_SourceAssociations_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Rarity_SourceAssociation>(Service, this.Id, "nhs_raritysourceassociation", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_opportunities</para>
/// </summary>
public List<Entity> GetOpportunities (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "opportunity", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_opportunities</para>
/// </summary>
public List<Entity> GetOpportunities (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "opportunity", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_opportunityclose</para>
/// </summary>
public List<Entity> GetOpportunityCloseActivities (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "opportunityclose", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_opportunityclose</para>
/// </summary>
public List<Entity> GetOpportunityCloseActivities (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "opportunityclose", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_opportunityproduct</para>
/// </summary>
public List<Entity> GetOpportunityProducts (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "opportunityproduct", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_opportunityproduct</para>
/// </summary>
public List<Entity> GetOpportunityProducts (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "opportunityproduct", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_orderclose</para>
/// </summary>
public List<Entity> GetOrderCloseActivities (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "orderclose", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_orderclose</para>
/// </summary>
public List<Entity> GetOrderCloseActivities (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "orderclose", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_phonecall</para>
/// </summary>
public List<Entity> GetPhoneCalls (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "phonecall", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_phonecall</para>
/// </summary>
public List<Entity> GetPhoneCalls (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "phonecall", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: OwningTeam_postfollows</para>
/// </summary>
public List<Entity> GetFollows (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "postfollow", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: OwningTeam_postfollows</para>
/// </summary>
public List<Entity> GetFollows (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "postfollow", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_PostRegardings</para>
/// </summary>
public List<Entity> GetPostRegarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "postregarding", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_PostRegardings</para>
/// </summary>
public List<Entity> GetPostRegarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "postregarding", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_PostRoles</para>
/// </summary>
public List<Entity> GetPostRoles (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "postrole", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_PostRoles</para>
/// </summary>
public List<Entity> GetPostRoles (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "postrole", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_principalobjectattributeaccess</para>
/// </summary>
public List<Entity> GetFieldSharing (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_principalobjectattributeaccess</para>
/// </summary>
public List<Entity> GetFieldSharing (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_principalobjectattributeaccess_principalid</para>
/// </summary>
public List<Entity> GetFieldSharing2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "principalobjectattributeaccess", "principalid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_principalobjectattributeaccess_principalid</para>
/// </summary>
public List<Entity> GetFieldSharing2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "principalobjectattributeaccess", "principalid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_processsession</para>
/// </summary>
public List<Entity> GetProcessSessions (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "processsession", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_processsession</para>
/// </summary>
public List<Entity> GetProcessSessions (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "processsession", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Team_ProcessSessions</para>
/// </summary>
public List<Entity> GetProcessSessions2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Team_ProcessSessions</para>
/// </summary>
public List<Entity> GetProcessSessions2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_queueitembase_workerid</para>
/// </summary>
public List<Entity> GetQueueItems (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "queueitem", "workerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_queueitembase_workerid</para>
/// </summary>
public List<Entity> GetQueueItems (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "queueitem", "workerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_quotes</para>
/// </summary>
public List<Entity> GetQuotes (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "quote", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_quotes</para>
/// </summary>
public List<Entity> GetQuotes (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "quote", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_quoteclose</para>
/// </summary>
public List<Entity> GetQuoteCloseActivities (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "quoteclose", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_quoteclose</para>
/// </summary>
public List<Entity> GetQuoteCloseActivities (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "quoteclose", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_quotedetail</para>
/// </summary>
public List<Entity> GetQuoteProducts (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "quotedetail", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_quotedetail</para>
/// </summary>
public List<Entity> GetQuoteProducts (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "quotedetail", "owningteam", Columns); }
/// <summary>
/// <para><b>RatingModel (Owning Team)</b></para>
/// <para>Schema Name: team_ratingmodel</para>
/// </summary>
public List<RatingModel> GetRatingModels_OwningTeam (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RatingModel>(Service, this.Id, "ratingmodel", "owningteam", Columns); }
/// <summary>
/// <para><b>RatingModel (Owning Team)</b></para>
/// <para>Schema Name: team_ratingmodel</para>
/// </summary>
public List<RatingModel> GetRatingModels_OwningTeam (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<RatingModel>(Service, this.Id, "ratingmodel", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_ratingvalue</para>
/// </summary>
public List<Entity> GetRatingValues (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "ratingvalue", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_ratingvalue</para>
/// </summary>
public List<Entity> GetRatingValues (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "ratingvalue", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_recurringappointmentmaster</para>
/// </summary>
public List<Entity> GetRecurringAppointments (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "recurringappointmentmaster", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_recurringappointmentmaster</para>
/// </summary>
public List<Entity> GetRecurringAppointments (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "recurringappointmentmaster", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_resource_groups</para>
/// </summary>
public List<Entity> GetSchedulingGroups (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "resourcegroup", "resourcegroupid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_resource_groups</para>
/// </summary>
public List<Entity> GetSchedulingGroups (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "resourcegroup", "resourcegroupid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_resource_specs</para>
/// </summary>
public List<Entity> GetResourceSpecifications (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "resourcespec", "groupobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_resource_specs</para>
/// </summary>
public List<Entity> GetResourceSpecifications (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "resourcespec", "groupobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_routingrule</para>
/// </summary>
public List<Entity> GetRoutingRuleSets (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "routingrule", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_routingrule</para>
/// </summary>
public List<Entity> GetRoutingRuleSets (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "routingrule", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_routingruleitem</para>
/// </summary>
public List<Entity> GetRuleItems (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "routingruleitem", "assignobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_routingruleitem</para>
/// </summary>
public List<Entity> GetRuleItems (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "routingruleitem", "assignobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_orders</para>
/// </summary>
public List<Entity> GetOrders (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "salesorder", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_orders</para>
/// </summary>
public List<Entity> GetOrders (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "salesorder", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_salesorderdetail</para>
/// </summary>
public List<Entity> GetOrderProducts (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "salesorderdetail", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_salesorderdetail</para>
/// </summary>
public List<Entity> GetOrderProducts (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "salesorderdetail", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_service_appointments</para>
/// </summary>
public List<Entity> GetServiceActivities (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "serviceappointment", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_service_appointments</para>
/// </summary>
public List<Entity> GetServiceActivities (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "serviceappointment", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_sharepointdocumentlocation</para>
/// </summary>
public List<Entity> GetDocumentLocations (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "sharepointdocumentlocation", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_sharepointdocumentlocation</para>
/// </summary>
public List<Entity> GetDocumentLocations (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "sharepointdocumentlocation", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_sharepointsite</para>
/// </summary>
public List<Entity> GetSharePointSites (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "sharepointsite", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_sharepointsite</para>
/// </summary>
public List<Entity> GetSharePointSites (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "sharepointsite", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_slaBase</para>
/// </summary>
public List<Entity> GetSLAs (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "sla", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_slaBase</para>
/// </summary>
public List<Entity> GetSLAs (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "sla", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_socialactivity</para>
/// </summary>
public List<Entity> GetSocialActivities (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "socialactivity", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_socialactivity</para>
/// </summary>
public List<Entity> GetSocialActivities (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "socialactivity", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_SyncError</para>
/// </summary>
public List<Entity> GetSyncErrors (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "syncerror", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_SyncError</para>
/// </summary>
public List<Entity> GetSyncErrors (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "syncerror", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Team_SyncErrors</para>
/// </summary>
public List<Entity> GetSyncErrors2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Team_SyncErrors</para>
/// </summary>
public List<Entity> GetSyncErrors2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_task</para>
/// </summary>
public List<Entity> GetTasks (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "task", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_task</para>
/// </summary>
public List<Entity> GetTasks (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "task", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_email_templates</para>
/// </summary>
public List<Entity> GetEmailTemplates (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "template", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_email_templates</para>
/// </summary>
public List<Entity> GetEmailTemplates (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "template", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_userentityinstancedata</para>
/// </summary>
public List<Entity> GetUserEntityInstanceData (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "userentityinstancedata", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_userentityinstancedata</para>
/// </summary>
public List<Entity> GetUserEntityInstanceData (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "userentityinstancedata", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: userentityinstancedata_team</para>
/// </summary>
public List<Entity> GetUserEntityInstanceData2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: userentityinstancedata_team</para>
/// </summary>
public List<Entity> GetUserEntityInstanceData2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_userentityuisettings</para>
/// </summary>
public List<Entity> GetUserEntityUISettings (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "userentityuisettings", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_userentityuisettings</para>
/// </summary>
public List<Entity> GetUserEntityUISettings (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "userentityuisettings", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_userform</para>
/// </summary>
public List<Entity> GetUserDashboards (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "userform", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_userform</para>
/// </summary>
public List<Entity> GetUserDashboards (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "userform", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_userquery</para>
/// </summary>
public List<Entity> GetSavedViews (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "userquery", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_userquery</para>
/// </summary>
public List<Entity> GetSavedViews (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "userquery", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_userqueryvisualizations</para>
/// </summary>
public List<Entity> GetUserCharts (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "userqueryvisualization", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_userqueryvisualizations</para>
/// </summary>
public List<Entity> GetUserCharts (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "userqueryvisualization", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_workflow</para>
/// </summary>
public List<Entity> GetProcesses (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "workflow", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_workflow</para>
/// </summary>
public List<Entity> GetProcesses (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "workflow", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_workflowbinary</para>
/// </summary>
public List<Entity> GetWorkflowBinaries (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "workflowbinary", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_workflowbinary</para>
/// </summary>
public List<Entity> GetWorkflowBinaries (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "workflowbinary", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_workflowlog</para>
/// </summary>
public List<Entity> GetProcessLogs (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "workflowlog", "owningteam", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: team_workflowlog</para>
/// </summary>
public List<Entity> GetProcessLogs (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "workflowlog", "owningteam", Columns); }


        /// <summary>
/// <para>Related Entity: <b>Security Role</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: teamroles_association</para>
/// </summary>
public List<SecurityRole> GetSecurityRoles (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<SecurityRole>(Service, this, "team", "teamid", "role", "roleid", "teamroles", "teamid", "roleid", Columns); }
public List<SecurityRole> GetSecurityRoles (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities<SecurityRole>(Service, this, "team", "teamid", "role", "roleid", "teamroles", "teamid", "roleid", Columns); }
public void RelateSecurityRoles (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "teamroles_association", Items); }
public void RelateSecurityRoles (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "teamroles_association", Items); }
public void UnRelateSecurityRoles (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "teamroles_association", Items); }
public void UnRelateSecurityRoles (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "teamroles_association", Items); }
/// <summary>
/// <para>Related Entity: <b>User</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: teammembership_association</para>
/// </summary>
public List<Entity> GetUsers (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "team", "teamid", "systemuser", "systemuserid", "teammembership", "teamid", "systemuserid", Columns); }
public List<Entity> GetUsers (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "team", "teamid", "systemuser", "systemuserid", "teammembership", "teamid", "systemuserid", Columns); }
public void RelateUsers (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "teammembership_association", Items); }
public void RelateUsers (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "teammembership_association", Items); }
public void UnRelateUsers (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "teammembership_association", Items); }
public void UnRelateUsers (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "teammembership_association", Items); }
/// <summary>
/// <para>Related Entity: <b>Sync Attribute Mapping Profile</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: teamsyncattributemappingprofiles_association</para>
/// </summary>
public List<Entity> GetSyncAttributeMappingProfiles (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "team", "teamid", "syncattributemappingprofile", "syncattributemappingprofileid", "teamsyncattributemappingprofiles", "teamid", "syncattributemappingprofileid", Columns); }
public List<Entity> GetSyncAttributeMappingProfiles (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "team", "teamid", "syncattributemappingprofile", "syncattributemappingprofileid", "teamsyncattributemappingprofiles", "teamid", "syncattributemappingprofileid", Columns); }
public void RelateSyncAttributeMappingProfiles (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "teamsyncattributemappingprofiles_association", Items); }
public void RelateSyncAttributeMappingProfiles (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "teamsyncattributemappingprofiles_association", Items); }
public void UnRelateSyncAttributeMappingProfiles (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "teamsyncattributemappingprofiles_association", Items); }
public void UnRelateSyncAttributeMappingProfiles (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "teamsyncattributemappingprofiles_association", Items); }
/// <summary>
/// <para>Related Entity: <b>Field Security Profile</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: teamprofiles_association</para>
/// </summary>
public List<Entity> GetFieldSecurityProfiles (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "team", "teamid", "fieldsecurityprofile", "fieldsecurityprofileid", "teamprofiles", "teamid", "fieldsecurityprofileid", Columns); }
public List<Entity> GetFieldSecurityProfiles (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "team", "teamid", "fieldsecurityprofile", "fieldsecurityprofileid", "teamprofiles", "teamid", "fieldsecurityprofileid", Columns); }
public void RelateFieldSecurityProfiles (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "teamprofiles_association", Items); }
public void RelateFieldSecurityProfiles (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "teamprofiles_association", Items); }
public void UnRelateFieldSecurityProfiles (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "teamprofiles_association", Items); }
public void UnRelateFieldSecurityProfiles (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "teamprofiles_association", Items); }


                /// <summary>
        /// Add a group of members to a team.
        /// </summary>
        /// <param name="Service">Organization Service</param>
        /// <param name="MemberIds">Ids of the members to add to the team.</param>
        public void AddMembers(IOrganizationService Service, List<Guid> MemberIds)
        {
            AddMembersTeamRequest Request = new AddMembersTeamRequest() { TeamId = this.Id, MemberIds = MemberIds.ToArray() };
            Service.Execute(Request);
        }


        public enum eTeamType
{
	///<summary><para>Owner</para>
	///<para>Value = 0</para></summary>
	[Description("Owner")]
	Owner = 0, 
	///<summary><para>Access</para>
	///<para>Value = 1</para></summary>
	[Description("Access")]
	Access = 1, 
	///<summary><para>AAD Security Group</para>
	///<para>Value = 2</para></summary>
	[Description("AAD Security Group")]
	AADSecurityGroup = 2, 
	///<summary><para>AAD Office Group</para>
	///<para>Value = 3</para></summary>
	[Description("AAD Office Group")]
	AADOfficeGroup = 3
}


        public static class Properties
{
	/// <summary><para>createdonbehalfbyyominame</para>
	/// <para>createdonbehalfbyyominame</para></summary>
	public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
	/// <summary><para>transactioncurrencyidname</para>
	/// <para>transactioncurrencyidname</para></summary>
	public const string TransactionCurrencyIdName = "transactioncurrencyidname";
	/// <summary><para>queueidname</para>
	/// <para>queueidname</para></summary>
	public const string QueueIdName = "queueidname";
	/// <summary><para>nhs_accountyominame</para>
	/// <para>nhs_accountyominame</para></summary>
	public const string Nhs_AccountYomiName = "nhs_accountyominame";
	/// <summary><para>administratoridname</para>
	/// <para>administratoridname</para></summary>
	public const string AdministratorIdName = "administratoridname";
	/// <summary><para>organizationidname</para>
	/// <para>organizationidname</para></summary>
	public const string OrganizationIdName = "organizationidname";
	/// <summary><para>createdbyyominame</para>
	/// <para>createdbyyominame</para></summary>
	public const string CreatedByYomiName = "createdbyyominame";
	/// <summary><para>nhs_accountname</para>
	/// <para>nhs_accountname</para></summary>
	public const string Nhs_AccountName = "nhs_accountname";
	/// <summary><para>modifiedbyname</para>
	/// <para>modifiedbyname</para></summary>
	public const string ModifiedByName = "modifiedbyname";
	/// <summary><para>modifiedbyyominame</para>
	/// <para>modifiedbyyominame</para></summary>
	public const string ModifiedByYomiName = "modifiedbyyominame";
	/// <summary><para>administratoridyominame</para>
	/// <para>administratoridyominame</para></summary>
	public const string AdministratorIdYomiName = "administratoridyominame";
	/// <summary><para>businessunitidname</para>
	/// <para>businessunitidname</para></summary>
	public const string BusinessUnitIdName = "businessunitidname";
	/// <summary><para>modifiedonbehalfbyyominame</para>
	/// <para>modifiedonbehalfbyyominame</para></summary>
	public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
	/// <summary><para>createdbyname</para>
	/// <para>createdbyname</para></summary>
	public const string CreatedByName = "createdbyname";
	/// <summary><para>createdonbehalfbyname</para>
	/// <para>createdonbehalfbyname</para></summary>
	public const string CreatedOnBehalfByName = "createdonbehalfbyname";
	/// <summary><para>modifiedonbehalfbyname</para>
	/// <para>modifiedonbehalfbyname</para></summary>
	public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
	/// <summary><para>(Deprecated) Process Stage</para>
	/// <para>stageid</para></summary>
	public const string _Deprecated_ProcessStage = "stageid";
	/// <summary><para>(Deprecated) Traversed Path</para>
	/// <para>traversedpath</para></summary>
	public const string _Deprecated_TraversedPath = "traversedpath";
	/// <summary><para>Account</para>
	/// <para>nhs_account</para></summary>
	public const string Account = "nhs_account";
	/// <summary><para>Administrator</para>
	/// <para>administratorid</para></summary>
	public const string Administrator = "administratorid";
	/// <summary><para>Azure AD Object Id for a group</para>
	/// <para>azureactivedirectoryobjectid</para></summary>
	public const string AzureADObjectIdForAGroup = "azureactivedirectoryobjectid";
	/// <summary><para>Business Unit</para>
	/// <para>businessunitid</para></summary>
	public const string BusinessUnit = "businessunitid";
	/// <summary><para>Created By</para>
	/// <para>createdby</para></summary>
	public const string CreatedBy = "createdby";
	/// <summary><para>Created By (Delegate)</para>
	/// <para>createdonbehalfby</para></summary>
	public const string CreatedBy_Delegate = "createdonbehalfby";
	/// <summary><para>Created On</para>
	/// <para>createdon</para></summary>
	public const string CreatedOn = "createdon";
	/// <summary><para>Currency</para>
	/// <para>transactioncurrencyid</para></summary>
	public const string Currency = "transactioncurrencyid";
	/// <summary><para>Default Queue</para>
	/// <para>queueid</para></summary>
	public const string DefaultQueue = "queueid";
	/// <summary><para>Description</para>
	/// <para>description</para></summary>
	public const string Description = "description";
	/// <summary><para>Email</para>
	/// <para>emailaddress</para></summary>
	public const string Email = "emailaddress";
	/// <summary><para>Exchange Rate</para>
	/// <para>exchangerate</para></summary>
	public const string ExchangeRate = "exchangerate";
	/// <summary><para>Import Sequence Number</para>
	/// <para>importsequencenumber</para></summary>
	public const string ImportSequenceNumber = "importsequencenumber";
	/// <summary><para>Is Default</para>
	/// <para>isdefault</para></summary>
	public const string IsDefault = "isdefault";
	/// <summary><para>Is System Managed</para>
	/// <para>systemmanaged</para></summary>
	public const string IsSystemManaged = "systemmanaged";
	/// <summary><para>Modified By</para>
	/// <para>modifiedby</para></summary>
	public const string ModifiedBy = "modifiedby";
	/// <summary><para>Modified By (Delegate)</para>
	/// <para>modifiedonbehalfby</para></summary>
	public const string ModifiedBy_Delegate = "modifiedonbehalfby";
	/// <summary><para>Modified On</para>
	/// <para>modifiedon</para></summary>
	public const string ModifiedOn = "modifiedon";
	/// <summary><para>Organization </para>
	/// <para>organizationid</para></summary>
	public const string Organization = "organizationid";
	/// <summary><para>Process</para>
	/// <para>processid</para></summary>
	public const string Process = "processid";
	/// <summary><para>Record Created On</para>
	/// <para>overriddencreatedon</para></summary>
	public const string RecordCreatedOn = "overriddencreatedon";
	/// <summary><para>Regarding Object Id</para>
	/// <para>regardingobjectid</para></summary>
	public const string RegardingObjectId = "regardingobjectid";
	/// <summary><para>Regarding Object Type</para>
	/// <para>regardingobjecttypecode</para></summary>
	public const string RegardingObjectType = "regardingobjecttypecode";
	/// <summary><para>Team</para>
	/// <para>teamid</para></summary>
	public const string TeamId = "teamid";
	/// <summary><para>Team Name</para>
	/// <para>name</para></summary>
	public const string TeamName = "name";
	/// <summary><para>Team Template Identifier</para>
	/// <para>teamtemplateid</para></summary>
	public const string TeamTemplateIdentifier = "teamtemplateid";
	/// <summary><para>Team Type</para>
	/// <para>teamtype</para></summary>
	public const string TeamType = "teamtype";
	/// <summary><para>Version number</para>
	/// <para>versionnumber</para></summary>
	public const string VersionNumber = "versionnumber";
	/// <summary><para>Yomi Name</para>
	/// <para>yominame</para></summary>
	public const string YomiName = "yominame";
}

    }
}
