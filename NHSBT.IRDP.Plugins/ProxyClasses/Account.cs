// <auto-generated />

using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.Threading.Tasks;
using System.ComponentModel;
using System.Runtime.Serialization;

namespace NHSBT.IRDP.Plugins.ProxyClasses
{
    [EntityLogicalNameAttribute("account")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XrmToolkit", "4.0")]
    [DataContract(Name = "Entity", Namespace = "http://schemas.microsoft.com/xrm/2011/Contracts")]
    public partial class Account : BaseProxyClass
    {
        public new const string LogicalName = "account";
        public const int ObjectTypeCode = 1;
        public const string PrimaryIdAttribute = "accountid";
        public const string PrimaryNameAttribute = "name";
        public const string PrimaryImageAttribute = "entityimage";
        static Account()
        {
            BaseProxyClass.RegisterProxyType(typeof(Account), "account");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public Account() : base(new Entity("account")) { }
        public Account(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<Account>(); }
        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }
        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }
        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }
        private static Dictionary<string, eNumberOptions> _numberOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }

        ///<summary>
///<para>Logical Name: masteraccountidyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("masteraccountidyominame")]
public string MasterAccountIdYomiName
{
	get { return this.GetPropertyValue<string>("masteraccountidyominame"); }
}
///<summary>
///<para>Logical Name: createdbyexternalpartyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyexternalpartyname")]
public string CreatedByExternalPartyName
{
	get { return this.GetPropertyValue<string>("createdbyexternalpartyname"); }
}
///<summary>
///<para>Logical Name: entityimage_timestamp</para>
///</summary>
[AttributeLogicalNameAttribute("entityimage_timestamp")]
public int? EntityImage_Timestamp
{
	get { return this.GetPropertyValue<int?>("entityimage_timestamp"); }
}
///<summary>
///<para>Logical Name: modifiedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyyominame")]
public string ModifiedByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedbyyominame"); }
}
///<summary>
///<para>Logical Name: nhs_countryidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("nhs_countryidname")]
public string Nhs_CountryIdName
{
	get { return this.GetPropertyValue<string>("nhs_countryidname"); }
}
///<summary>
///<para>Logical Name: primarycontactidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("primarycontactidname")]
public string PrimaryContactIdName
{
	get { return this.GetPropertyValue<string>("primarycontactidname"); }
}
///<summary>
///<para>Logical Name: preferredsystemuseridyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("preferredsystemuseridyominame")]
public string PreferredSystemUserIdYomiName
{
	get { return this.GetPropertyValue<string>("preferredsystemuseridyominame"); }
}
///<summary>
///<para>Logical Name: modifiedbyexternalpartyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyexternalpartyyominame")]
public string ModifiedByExternalPartyYomiName
{
	get { return this.GetPropertyValue<string>("modifiedbyexternalpartyyominame"); }
}
///<summary>
///<para>Logical Name: masteraccountidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("masteraccountidname")]
public string MasterAccountIdName
{
	get { return this.GetPropertyValue<string>("masteraccountidname"); }
}
///<summary>
///<para>Logical Name: preferredsystemuseridname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("preferredsystemuseridname")]
public string PreferredSystemUserIdName
{
	get { return this.GetPropertyValue<string>("preferredsystemuseridname"); }
}
///<summary>
///<para>Logical Name: preferredserviceidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("preferredserviceidname")]
public string PreferredServiceIdName
{
	get { return this.GetPropertyValue<string>("preferredserviceidname"); }
}
///<summary>
///<para>Logical Name: originatingleadidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("originatingleadidname")]
public string OriginatingLeadIdName
{
	get { return this.GetPropertyValue<string>("originatingleadidname"); }
}
///<summary>
///<para>Logical Name: parentaccountidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("parentaccountidname")]
public string ParentAccountIdName
{
	get { return this.GetPropertyValue<string>("parentaccountidname"); }
}
///<summary>
///<para>Logical Name: modifiedbyexternalpartyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyexternalpartyname")]
public string ModifiedByExternalPartyName
{
	get { return this.GetPropertyValue<string>("modifiedbyexternalpartyname"); }
}
///<summary>
///<para>Logical Name: slaname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("slaname")]
public string SLAName
{
	get { return this.GetPropertyValue<string>("slaname"); }
}
///<summary>
///<para>Logical Name: slainvokedidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("slainvokedidname")]
public string SLAInvokedIdName
{
	get { return this.GetPropertyValue<string>("slainvokedidname"); }
}
///<summary>
///<para>Logical Name: owneridyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridyominame")]
public string OwnerIdYomiName
{
	get { return this.GetPropertyValue<string>("owneridyominame"); }
}
///<summary>
///<para>Logical Name: entityimage_url</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("entityimage_url")]
public string EntityImage_URL
{
	get { return this.GetPropertyValue<string>("entityimage_url"); }
}
///<summary>
///<para>Logical Name: nhs_teamyominame</para>
///<para>Max Length: 160 characters</para>
///</summary>
[AttributeLogicalNameAttribute("nhs_teamyominame")]
public string Nhs_TeamYomiName
{
	get { return this.GetPropertyValue<string>("nhs_teamyominame"); }
}
///<summary>
///<para>Logical Name: createdbyexternalpartyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyexternalpartyyominame")]
public string CreatedByExternalPartyYomiName
{
	get { return this.GetPropertyValue<string>("createdbyexternalpartyyominame"); }
}
///<summary>
///<para>Logical Name: originatingleadidyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("originatingleadidyominame")]
public string OriginatingLeadIdYomiName
{
	get { return this.GetPropertyValue<string>("originatingleadidyominame"); }
}
///<summary>
///<para>Logical Name: preferredequipmentidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("preferredequipmentidname")]
public string PreferredEquipmentIdName
{
	get { return this.GetPropertyValue<string>("preferredequipmentidname"); }
}
///<summary>
///<para>Logical Name: territoryidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("territoryidname")]
public string TerritoryIdName
{
	get { return this.GetPropertyValue<string>("territoryidname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyname")]
public string CreatedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: owneridname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridname")]
public string OwnerIdName
{
	get { return this.GetPropertyValue<string>("owneridname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
public string ModifiedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyidname")]
public string TransactionCurrencyIdName
{
	get { return this.GetPropertyValue<string>("transactioncurrencyidname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
public string CreatedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: owneridtype</para>
///</summary>
[AttributeLogicalNameAttribute("owneridtype")]
public string OwnerIdType
{
	get { return this.GetPropertyValue<string>("owneridtype"); }
	set { this.SetPropertyValue<string>("owneridtype", value, "OwnerIdType"); }
}
///<summary>
///<para>Logical Name: createdbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyname")]
public string CreatedByName
{
	get { return this.GetPropertyValue<string>("createdbyname"); }
}
///<summary>
///<para>Logical Name: defaultpricelevelidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("defaultpricelevelidname")]
public string DefaultPriceLevelIdName
{
	get { return this.GetPropertyValue<string>("defaultpricelevelidname"); }
}
///<summary>
///<para>Logical Name: nhs_teamname</para>
///<para>Max Length: 160 characters</para>
///</summary>
[AttributeLogicalNameAttribute("nhs_teamname")]
public string Nhs_TeamName
{
	get { return this.GetPropertyValue<string>("nhs_teamname"); }
}
///<summary>
///<para>Logical Name: primarycontactidyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("primarycontactidyominame")]
public string PrimaryContactIdYomiName
{
	get { return this.GetPropertyValue<string>("primarycontactidyominame"); }
}
///<summary>
///<para>Logical Name: modifiedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyname")]
public string ModifiedByName
{
	get { return this.GetPropertyValue<string>("modifiedbyname"); }
}
///<summary>
///<para>Logical Name: isprivate</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isprivate")]
public bool? IsPrivate
{
	get { return this.GetPropertyValue<bool?>("isprivate"); }
}
///<summary>
///<para>Logical Name: createdbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyyominame")]
public string CreatedByYomiName
{
	get { return this.GetPropertyValue<string>("createdbyyominame"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
public string ModifiedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: parentaccountidyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("parentaccountidyominame")]
public string ParentAccountIdYomiName
{
	get { return this.GetPropertyValue<string>("parentaccountidyominame"); }
}
///<summary>
///<para>Logical Name: stageid</para>
///</summary>
[AttributeLogicalNameAttribute("stageid")]
public Guid _Deprecated_ProcessStage
{
	get { return this.GetPropertyValue<Guid>("stageid"); }
	set { this.SetPropertyValue<Guid>("stageid", value, "_Deprecated_ProcessStage"); }
}
///<summary>
///<para>Logical Name: traversedpath</para>
///<para>Max Length: 1250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("traversedpath")]
public string _Deprecated_TraversedPath
{
	get { return this.GetPropertyValue<string>("traversedpath"); }
	set { this.SetPropertyValue("traversedpath", value, 1250, "_Deprecated_TraversedPath"); }
}
///<summary>
///<para>Key Property (Uniqueidentifier)</para>
///<para>Logical Name: accountid</para>
///</summary>
[AttributeLogicalNameAttribute("accountid")]
public Guid AccountId
{
	get
	{
		return base.Id;
	}
	set
	{
		base.Id = value;
		base.SetPropertyValue("accountid", value, "AccountId");
	}
}
///<summary>
///<para>Logical Name: name</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("name")]
public string AccountName
{
	get { return this.GetPropertyValue<string>("name"); }
	set { this.SetPropertyValue("name", value, 50, "AccountName"); }
}
///<summary>
///<para>Logical Name: accountnumber</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("accountnumber")]
public string AccountNumber
{
	get { return this.GetPropertyValue<string>("accountnumber"); }
	set { this.SetPropertyValue("accountnumber", value, 20, "AccountNumber"); }
}
/// <summary>
///Logical Name: accountratingcode
/// </summary>
[AttributeLogicalNameAttribute("accountratingcode")]
public eAccountRating? AccountRating
{
	get
	{
		if (AccountRating_OptionSetValue != null) { return (eAccountRating)AccountRating_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.AccountRating_OptionSetValue = new OptionSetValue((int)value); }
		else this.AccountRating_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: accountratingcode</para>
///</summary>
[AttributeLogicalNameAttribute("accountratingcode")]
public OptionSetValue AccountRating_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("accountratingcode"); }
	set { this.SetPropertyValue<OptionSetValue>("accountratingcode", value, "AccountRating_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string AccountRating_Text(IOrganizationService Service)
{
	return this.AccountRating_OptionSetValue.GetOptionSetText(Service, this, "accountratingcode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string AccountRating_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.AccountRating_OptionSetValue.Value);
}
/// <summary>
///Logical Name: address1_addresstypecode
/// </summary>
[AttributeLogicalNameAttribute("address1_addresstypecode")]
public eAddress1_AddressType? Address1_AddressType
{
	get
	{
		if (Address1_AddressType_OptionSetValue != null) { return (eAddress1_AddressType)Address1_AddressType_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Address1_AddressType_OptionSetValue = new OptionSetValue((int)value); }
		else this.Address1_AddressType_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: address1_addresstypecode</para>
///</summary>
[AttributeLogicalNameAttribute("address1_addresstypecode")]
public OptionSetValue Address1_AddressType_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("address1_addresstypecode"); }
	set { this.SetPropertyValue<OptionSetValue>("address1_addresstypecode", value, "Address1_AddressType_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Address1_AddressType_Text(IOrganizationService Service)
{
	return this.Address1_AddressType_OptionSetValue.GetOptionSetText(Service, this, "address1_addresstypecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Address1_AddressType_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Address1_AddressType_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: address1_county</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_county")]
public string Address1_County
{
	get { return this.GetPropertyValue<string>("address1_county"); }
	set { this.SetPropertyValue("address1_county", value, 50, "Address1_County"); }
}
///<summary>
///<para>Logical Name: address1_fax</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_fax")]
public string Address1_Fax
{
	get { return this.GetPropertyValue<string>("address1_fax"); }
	set { this.SetPropertyValue("address1_fax", value, 50, "Address1_Fax"); }
}
/// <summary>
///Logical Name: address1_freighttermscode
/// </summary>
[AttributeLogicalNameAttribute("address1_freighttermscode")]
public eAddress1_FreightTerms? Address1_FreightTerms
{
	get
	{
		if (Address1_FreightTerms_OptionSetValue != null) { return (eAddress1_FreightTerms)Address1_FreightTerms_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Address1_FreightTerms_OptionSetValue = new OptionSetValue((int)value); }
		else this.Address1_FreightTerms_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: address1_freighttermscode</para>
///</summary>
[AttributeLogicalNameAttribute("address1_freighttermscode")]
public OptionSetValue Address1_FreightTerms_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("address1_freighttermscode"); }
	set { this.SetPropertyValue<OptionSetValue>("address1_freighttermscode", value, "Address1_FreightTerms_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Address1_FreightTerms_Text(IOrganizationService Service)
{
	return this.Address1_FreightTerms_OptionSetValue.GetOptionSetText(Service, this, "address1_freighttermscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Address1_FreightTerms_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Address1_FreightTerms_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: address1_addressid</para>
///</summary>
[AttributeLogicalNameAttribute("address1_addressid")]
public Guid Address1_ID
{
	get { return this.GetPropertyValue<Guid>("address1_addressid"); }
	set { this.SetPropertyValue<Guid>("address1_addressid", value, "Address1_ID"); }
}
///<summary>
///<para>Logical Name: address1_latitude</para>
///<para>Minimum Value: -90</para>
///<para>Maximum Value: 90</para>
///<para>Precision: 5</para>
///</summary>
[AttributeLogicalNameAttribute("address1_latitude")]
public double? Address1_Latitude
{
	get { return this.GetPropertyValue<double?>("address1_latitude"); }
	set { this.SetPropertyValue("address1_latitude", (double?)value, (double)-90, (double)90, "Address1_Latitude"); }
}
///<summary>
///<para>Logical Name: address1_longitude</para>
///<para>Minimum Value: -180</para>
///<para>Maximum Value: 180</para>
///<para>Precision: 5</para>
///</summary>
[AttributeLogicalNameAttribute("address1_longitude")]
public double? Address1_Longitude
{
	get { return this.GetPropertyValue<double?>("address1_longitude"); }
	set { this.SetPropertyValue("address1_longitude", (double?)value, (double)-180, (double)180, "Address1_Longitude"); }
}
///<summary>
///<para>Logical Name: address1_name</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_name")]
public string Address1_Name
{
	get { return this.GetPropertyValue<string>("address1_name"); }
	set { this.SetPropertyValue("address1_name", value, 200, "Address1_Name"); }
}
///<summary>
///<para>Logical Name: address1_postofficebox</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_postofficebox")]
public string Address1_PostOfficeBox
{
	get { return this.GetPropertyValue<string>("address1_postofficebox"); }
	set { this.SetPropertyValue("address1_postofficebox", value, 20, "Address1_PostOfficeBox"); }
}
///<summary>
///<para>Logical Name: address1_primarycontactname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_primarycontactname")]
public string Address1_PrimaryContactName
{
	get { return this.GetPropertyValue<string>("address1_primarycontactname"); }
	set { this.SetPropertyValue("address1_primarycontactname", value, 100, "Address1_PrimaryContactName"); }
}
/// <summary>
///Logical Name: address1_shippingmethodcode
/// </summary>
[AttributeLogicalNameAttribute("address1_shippingmethodcode")]
public eAddress1_ShippingMethod? Address1_ShippingMethod
{
	get
	{
		if (Address1_ShippingMethod_OptionSetValue != null) { return (eAddress1_ShippingMethod)Address1_ShippingMethod_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Address1_ShippingMethod_OptionSetValue = new OptionSetValue((int)value); }
		else this.Address1_ShippingMethod_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: address1_shippingmethodcode</para>
///</summary>
[AttributeLogicalNameAttribute("address1_shippingmethodcode")]
public OptionSetValue Address1_ShippingMethod_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("address1_shippingmethodcode"); }
	set { this.SetPropertyValue<OptionSetValue>("address1_shippingmethodcode", value, "Address1_ShippingMethod_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Address1_ShippingMethod_Text(IOrganizationService Service)
{
	return this.Address1_ShippingMethod_OptionSetValue.GetOptionSetText(Service, this, "address1_shippingmethodcode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Address1_ShippingMethod_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Address1_ShippingMethod_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: address1_stateorprovince</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_stateorprovince")]
public string Address1_State_Province
{
	get { return this.GetPropertyValue<string>("address1_stateorprovince"); }
	set { this.SetPropertyValue("address1_stateorprovince", value, 50, "Address1_State_Province"); }
}
///<summary>
///<para>Logical Name: address1_telephone2</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_telephone2")]
public string Address1_Telephone2
{
	get { return this.GetPropertyValue<string>("address1_telephone2"); }
	set { this.SetPropertyValue("address1_telephone2", value, 50, "Address1_Telephone2"); }
}
///<summary>
///<para>Logical Name: address1_telephone3</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_telephone3")]
public string Address1_Telephone3
{
	get { return this.GetPropertyValue<string>("address1_telephone3"); }
	set { this.SetPropertyValue("address1_telephone3", value, 50, "Address1_Telephone3"); }
}
///<summary>
///<para>Logical Name: address1_upszone</para>
///<para>Max Length: 4 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_upszone")]
public string Address1_UPSZone
{
	get { return this.GetPropertyValue<string>("address1_upszone"); }
	set { this.SetPropertyValue("address1_upszone", value, 4, "Address1_UPSZone"); }
}
///<summary>
///<para>Logical Name: address1_utcoffset</para>
///<para>Minimum Value: -1500</para>
///<para>Maximum Value: 1500</para>
///</summary>
[AttributeLogicalNameAttribute("address1_utcoffset")]
public int? Address1_UTCOffset
{
	get { return this.GetPropertyValue<int?>("address1_utcoffset"); }
	set { this.SetPropertyValue("address1_utcoffset", (int?)value, (int)-1500, (int)1500, "Address1_UTCOffset"); }
}
///<summary>
///<para>Logical Name: address2_composite</para>
///<para>Max Length: 1000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_composite")]
public string Address2
{
	get { return this.GetPropertyValue<string>("address2_composite"); }
}
/// <summary>
///Logical Name: address2_addresstypecode
/// </summary>
[AttributeLogicalNameAttribute("address2_addresstypecode")]
public eAddress2_AddressType? Address2_AddressType
{
	get
	{
		if (Address2_AddressType_OptionSetValue != null) { return (eAddress2_AddressType)Address2_AddressType_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Address2_AddressType_OptionSetValue = new OptionSetValue((int)value); }
		else this.Address2_AddressType_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: address2_addresstypecode</para>
///</summary>
[AttributeLogicalNameAttribute("address2_addresstypecode")]
public OptionSetValue Address2_AddressType_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("address2_addresstypecode"); }
	set { this.SetPropertyValue<OptionSetValue>("address2_addresstypecode", value, "Address2_AddressType_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Address2_AddressType_Text(IOrganizationService Service)
{
	return this.Address2_AddressType_OptionSetValue.GetOptionSetText(Service, this, "address2_addresstypecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Address2_AddressType_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Address2_AddressType_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: address2_city</para>
///<para>Max Length: 80 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_city")]
public string Address2_City
{
	get { return this.GetPropertyValue<string>("address2_city"); }
	set { this.SetPropertyValue("address2_city", value, 80, "Address2_City"); }
}
///<summary>
///<para>Logical Name: address2_country</para>
///<para>Max Length: 80 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_country")]
public string Address2_Country_Region
{
	get { return this.GetPropertyValue<string>("address2_country"); }
	set { this.SetPropertyValue("address2_country", value, 80, "Address2_Country_Region"); }
}
///<summary>
///<para>Logical Name: address2_county</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_county")]
public string Address2_County
{
	get { return this.GetPropertyValue<string>("address2_county"); }
	set { this.SetPropertyValue("address2_county", value, 50, "Address2_County"); }
}
///<summary>
///<para>Logical Name: address2_fax</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_fax")]
public string Address2_Fax
{
	get { return this.GetPropertyValue<string>("address2_fax"); }
	set { this.SetPropertyValue("address2_fax", value, 50, "Address2_Fax"); }
}
/// <summary>
///Logical Name: address2_freighttermscode
/// </summary>
[AttributeLogicalNameAttribute("address2_freighttermscode")]
public eAddress2_FreightTerms? Address2_FreightTerms
{
	get
	{
		if (Address2_FreightTerms_OptionSetValue != null) { return (eAddress2_FreightTerms)Address2_FreightTerms_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Address2_FreightTerms_OptionSetValue = new OptionSetValue((int)value); }
		else this.Address2_FreightTerms_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: address2_freighttermscode</para>
///</summary>
[AttributeLogicalNameAttribute("address2_freighttermscode")]
public OptionSetValue Address2_FreightTerms_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("address2_freighttermscode"); }
	set { this.SetPropertyValue<OptionSetValue>("address2_freighttermscode", value, "Address2_FreightTerms_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Address2_FreightTerms_Text(IOrganizationService Service)
{
	return this.Address2_FreightTerms_OptionSetValue.GetOptionSetText(Service, this, "address2_freighttermscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Address2_FreightTerms_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Address2_FreightTerms_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: address2_addressid</para>
///</summary>
[AttributeLogicalNameAttribute("address2_addressid")]
public Guid Address2_ID
{
	get { return this.GetPropertyValue<Guid>("address2_addressid"); }
	set { this.SetPropertyValue<Guid>("address2_addressid", value, "Address2_ID"); }
}
///<summary>
///<para>Logical Name: address2_latitude</para>
///<para>Minimum Value: -90</para>
///<para>Maximum Value: 90</para>
///<para>Precision: 5</para>
///</summary>
[AttributeLogicalNameAttribute("address2_latitude")]
public double? Address2_Latitude
{
	get { return this.GetPropertyValue<double?>("address2_latitude"); }
	set { this.SetPropertyValue("address2_latitude", (double?)value, (double)-90, (double)90, "Address2_Latitude"); }
}
///<summary>
///<para>Logical Name: address2_longitude</para>
///<para>Minimum Value: -180</para>
///<para>Maximum Value: 180</para>
///<para>Precision: 5</para>
///</summary>
[AttributeLogicalNameAttribute("address2_longitude")]
public double? Address2_Longitude
{
	get { return this.GetPropertyValue<double?>("address2_longitude"); }
	set { this.SetPropertyValue("address2_longitude", (double?)value, (double)-180, (double)180, "Address2_Longitude"); }
}
///<summary>
///<para>Logical Name: address2_name</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_name")]
public string Address2_Name
{
	get { return this.GetPropertyValue<string>("address2_name"); }
	set { this.SetPropertyValue("address2_name", value, 200, "Address2_Name"); }
}
///<summary>
///<para>Logical Name: address2_postofficebox</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_postofficebox")]
public string Address2_PostOfficeBox
{
	get { return this.GetPropertyValue<string>("address2_postofficebox"); }
	set { this.SetPropertyValue("address2_postofficebox", value, 20, "Address2_PostOfficeBox"); }
}
///<summary>
///<para>Logical Name: address2_primarycontactname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_primarycontactname")]
public string Address2_PrimaryContactName
{
	get { return this.GetPropertyValue<string>("address2_primarycontactname"); }
	set { this.SetPropertyValue("address2_primarycontactname", value, 100, "Address2_PrimaryContactName"); }
}
/// <summary>
///Logical Name: address2_shippingmethodcode
/// </summary>
[AttributeLogicalNameAttribute("address2_shippingmethodcode")]
public eAddress2_ShippingMethod? Address2_ShippingMethod
{
	get
	{
		if (Address2_ShippingMethod_OptionSetValue != null) { return (eAddress2_ShippingMethod)Address2_ShippingMethod_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Address2_ShippingMethod_OptionSetValue = new OptionSetValue((int)value); }
		else this.Address2_ShippingMethod_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: address2_shippingmethodcode</para>
///</summary>
[AttributeLogicalNameAttribute("address2_shippingmethodcode")]
public OptionSetValue Address2_ShippingMethod_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("address2_shippingmethodcode"); }
	set { this.SetPropertyValue<OptionSetValue>("address2_shippingmethodcode", value, "Address2_ShippingMethod_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Address2_ShippingMethod_Text(IOrganizationService Service)
{
	return this.Address2_ShippingMethod_OptionSetValue.GetOptionSetText(Service, this, "address2_shippingmethodcode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Address2_ShippingMethod_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Address2_ShippingMethod_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: address2_stateorprovince</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_stateorprovince")]
public string Address2_State_Province
{
	get { return this.GetPropertyValue<string>("address2_stateorprovince"); }
	set { this.SetPropertyValue("address2_stateorprovince", value, 50, "Address2_State_Province"); }
}
///<summary>
///<para>Logical Name: address2_line1</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_line1")]
public string Address2_Street1
{
	get { return this.GetPropertyValue<string>("address2_line1"); }
	set { this.SetPropertyValue("address2_line1", value, 250, "Address2_Street1"); }
}
///<summary>
///<para>Logical Name: address2_line2</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_line2")]
public string Address2_Street2
{
	get { return this.GetPropertyValue<string>("address2_line2"); }
	set { this.SetPropertyValue("address2_line2", value, 250, "Address2_Street2"); }
}
///<summary>
///<para>Logical Name: address2_line3</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_line3")]
public string Address2_Street3
{
	get { return this.GetPropertyValue<string>("address2_line3"); }
	set { this.SetPropertyValue("address2_line3", value, 250, "Address2_Street3"); }
}
///<summary>
///<para>Logical Name: address2_telephone1</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_telephone1")]
public string Address2_Telephone1
{
	get { return this.GetPropertyValue<string>("address2_telephone1"); }
	set { this.SetPropertyValue("address2_telephone1", value, 50, "Address2_Telephone1"); }
}
///<summary>
///<para>Logical Name: address2_telephone2</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_telephone2")]
public string Address2_Telephone2
{
	get { return this.GetPropertyValue<string>("address2_telephone2"); }
	set { this.SetPropertyValue("address2_telephone2", value, 50, "Address2_Telephone2"); }
}
///<summary>
///<para>Logical Name: address2_telephone3</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_telephone3")]
public string Address2_Telephone3
{
	get { return this.GetPropertyValue<string>("address2_telephone3"); }
	set { this.SetPropertyValue("address2_telephone3", value, 50, "Address2_Telephone3"); }
}
///<summary>
///<para>Logical Name: address2_upszone</para>
///<para>Max Length: 4 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_upszone")]
public string Address2_UPSZone
{
	get { return this.GetPropertyValue<string>("address2_upszone"); }
	set { this.SetPropertyValue("address2_upszone", value, 4, "Address2_UPSZone"); }
}
///<summary>
///<para>Logical Name: address2_utcoffset</para>
///<para>Minimum Value: -1500</para>
///<para>Maximum Value: 1500</para>
///</summary>
[AttributeLogicalNameAttribute("address2_utcoffset")]
public int? Address2_UTCOffset
{
	get { return this.GetPropertyValue<int?>("address2_utcoffset"); }
	set { this.SetPropertyValue("address2_utcoffset", (int?)value, (int)-1500, (int)1500, "Address2_UTCOffset"); }
}
///<summary>
///<para>Logical Name: address2_postalcode</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_postalcode")]
public string Address2_ZIP_PostalCode
{
	get { return this.GetPropertyValue<string>("address2_postalcode"); }
	set { this.SetPropertyValue("address2_postalcode", value, 20, "Address2_ZIP_PostalCode"); }
}
///<summary>
///<para>Logical Name: address1_composite</para>
///<para>Max Length: 1000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_composite")]
public string AddressComposite
{
	get { return this.GetPropertyValue<string>("address1_composite"); }
}
///<summary>
///<para>Logical Name: address1_line1</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_line1")]
public string AddressLine1
{
	get { return this.GetPropertyValue<string>("address1_line1"); }
	set { this.SetPropertyValue("address1_line1", value, 250, "AddressLine1"); }
}
///<summary>
///<para>Logical Name: address1_line2</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_line2")]
public string AddressLine2
{
	get { return this.GetPropertyValue<string>("address1_line2"); }
	set { this.SetPropertyValue("address1_line2", value, 250, "AddressLine2"); }
}
///<summary>
///<para>Logical Name: address1_line3</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_line3")]
public string AddressLine3
{
	get { return this.GetPropertyValue<string>("address1_line3"); }
	set { this.SetPropertyValue("address1_line3", value, 250, "AddressLine3"); }
}
///<summary>
///<para>Logical Name: address1_telephone1</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_telephone1")]
public string AddressPhone
{
	get { return this.GetPropertyValue<string>("address1_telephone1"); }
	set { this.SetPropertyValue("address1_telephone1", value, 50, "AddressPhone"); }
}
///<summary>
///<para>Logical Name: aging30</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 100000000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("aging30")]
public decimal? Aging30
{
	get
	{
		if (Aging30Money != null) { return Aging30Money.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: aging30</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 100000000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("aging30")]
public Money Aging30Money
{
	get { return this.GetPropertyValue<Money>("aging30"); }
}
///<summary>
///<para>Logical Name: aging30_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("aging30_base")]
public decimal? Aging30_Base
{
	get
	{
		if (Aging30_BaseMoney != null) { return Aging30_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: aging30_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("aging30_base")]
public Money Aging30_BaseMoney
{
	get { return this.GetPropertyValue<Money>("aging30_base"); }
}
///<summary>
///<para>Logical Name: aging60</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 100000000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("aging60")]
public decimal? Aging60
{
	get
	{
		if (Aging60Money != null) { return Aging60Money.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: aging60</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 100000000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("aging60")]
public Money Aging60Money
{
	get { return this.GetPropertyValue<Money>("aging60"); }
}
///<summary>
///<para>Logical Name: aging60_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("aging60_base")]
public decimal? Aging60_Base
{
	get
	{
		if (Aging60_BaseMoney != null) { return Aging60_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: aging60_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("aging60_base")]
public Money Aging60_BaseMoney
{
	get { return this.GetPropertyValue<Money>("aging60_base"); }
}
///<summary>
///<para>Logical Name: aging90</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 100000000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("aging90")]
public decimal? Aging90
{
	get
	{
		if (Aging90Money != null) { return Aging90Money.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: aging90</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 100000000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("aging90")]
public Money Aging90Money
{
	get { return this.GetPropertyValue<Money>("aging90"); }
}
///<summary>
///<para>Logical Name: aging90_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("aging90_base")]
public decimal? Aging90_Base
{
	get
	{
		if (Aging90_BaseMoney != null) { return Aging90_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: aging90_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("aging90_base")]
public Money Aging90_BaseMoney
{
	get { return this.GetPropertyValue<Money>("aging90_base"); }
}
///<summary>
///<para>Logical Name: revenue</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 100000000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("revenue")]
public decimal? AnnualRevenue
{
	get
	{
		if (AnnualRevenueMoney != null) { return AnnualRevenueMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.AnnualRevenueMoney = new Money(value.Value); }
		else this.AnnualRevenueMoney = null;
	}
}
///<summary>
///<para>Logical Name: revenue</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 100000000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("revenue")]
public Money AnnualRevenueMoney
{
	get { return this.GetPropertyValue<Money>("revenue"); }
	set { this.SetPropertyValue("revenue", (Money)value, (decimal)0, (decimal)100000000000000, "AnnualRevenueMoney"); }
}
///<summary>
///<para>Logical Name: revenue_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("revenue_base")]
public decimal? AnnualRevenue_Base
{
	get
	{
		if (AnnualRevenue_BaseMoney != null) { return AnnualRevenue_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: revenue_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("revenue_base")]
public Money AnnualRevenue_BaseMoney
{
	get { return this.GetPropertyValue<Money>("revenue_base"); }
}
/// <summary>
///Logical Name: businesstypecode
/// </summary>
[AttributeLogicalNameAttribute("businesstypecode")]
public eBusinessType? BusinessType
{
	get
	{
		if (BusinessType_OptionSetValue != null) { return (eBusinessType)BusinessType_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.BusinessType_OptionSetValue = new OptionSetValue((int)value); }
		else this.BusinessType_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: businesstypecode</para>
///</summary>
[AttributeLogicalNameAttribute("businesstypecode")]
public OptionSetValue BusinessType_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("businesstypecode"); }
	set { this.SetPropertyValue<OptionSetValue>("businesstypecode", value, "BusinessType_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string BusinessType_Text(IOrganizationService Service)
{
	return this.BusinessType_OptionSetValue.GetOptionSetText(Service, this, "businesstypecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string BusinessType_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.BusinessType_OptionSetValue.Value);
}
/// <summary>
///Logical Name: accountcategorycode
/// </summary>
[AttributeLogicalNameAttribute("accountcategorycode")]
public eCategory? Category
{
	get
	{
		if (Category_OptionSetValue != null) { return (eCategory)Category_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Category_OptionSetValue = new OptionSetValue((int)value); }
		else this.Category_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: accountcategorycode</para>
///</summary>
[AttributeLogicalNameAttribute("accountcategorycode")]
public OptionSetValue Category_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("accountcategorycode"); }
	set { this.SetPropertyValue<OptionSetValue>("accountcategorycode", value, "Category_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Category_Text(IOrganizationService Service)
{
	return this.Category_OptionSetValue.GetOptionSetText(Service, this, "accountcategorycode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Category_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Category_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: address1_city</para>
///<para>Max Length: 80 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_city")]
public string City
{
	get { return this.GetPropertyValue<string>("address1_city"); }
	set { this.SetPropertyValue("address1_city", value, 80, "City"); }
}
/// <summary>
///Logical Name: accountclassificationcode
/// </summary>
[AttributeLogicalNameAttribute("accountclassificationcode")]
public eClassification? Classification
{
	get
	{
		if (Classification_OptionSetValue != null) { return (eClassification)Classification_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Classification_OptionSetValue = new OptionSetValue((int)value); }
		else this.Classification_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: accountclassificationcode</para>
///</summary>
[AttributeLogicalNameAttribute("accountclassificationcode")]
public OptionSetValue Classification_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("accountclassificationcode"); }
	set { this.SetPropertyValue<OptionSetValue>("accountclassificationcode", value, "Classification_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Classification_Text(IOrganizationService Service)
{
	return this.Classification_OptionSetValue.GetOptionSetText(Service, this, "accountclassificationcode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Classification_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Classification_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: nhs_countryid</para>
///</summary>
[AttributeLogicalNameAttribute("nhs_countryid")]
public EntityReference Country
{
	get { return this.GetPropertyValue<EntityReference>("nhs_countryid"); }
	set { this.SetPropertyValue<EntityReference>("nhs_countryid", value, "Country"); }
}
///<summary>
///<para>Logical Name: address1_country</para>
///<para>Max Length: 80 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_country")]
public string Country_Region
{
	get { return this.GetPropertyValue<string>("address1_country"); }
	set { this.SetPropertyValue("address1_country", value, 80, "Country_Region"); }
}
///<summary>
///<para>Logical Name: createdby</para>
///</summary>
[AttributeLogicalNameAttribute("createdby")]
public EntityReference CreatedBy
{
	get { return this.GetPropertyValue<EntityReference>("createdby"); }
}
///<summary>
///<para>Logical Name: createdonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfby")]
public EntityReference CreatedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("createdonbehalfby"); }
}
///<summary>
///<para>Logical Name: createdbyexternalparty</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyexternalparty")]
public EntityReference CreatedBy_ExternalParty
{
	get { return this.GetPropertyValue<EntityReference>("createdbyexternalparty"); }
}
///<summary>
///<para>Logical Name: createdon</para>
///</summary>
[AttributeLogicalNameAttribute("createdon")]
public DateTime? CreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("createdon"); }
}
///<summary>
///<para>Logical Name: creditonhold</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("creditonhold")]
public bool? CreditHold
{
	get { return this.GetPropertyValue<bool?>("creditonhold"); }
	set { this.SetPropertyValue<bool?>("creditonhold", value, "CreditHold"); }
}
///<summary>
///<para>Logical Name: creditlimit</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 100000000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("creditlimit")]
public decimal? CreditLimit
{
	get
	{
		if (CreditLimitMoney != null) { return CreditLimitMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.CreditLimitMoney = new Money(value.Value); }
		else this.CreditLimitMoney = null;
	}
}
///<summary>
///<para>Logical Name: creditlimit</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 100000000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("creditlimit")]
public Money CreditLimitMoney
{
	get { return this.GetPropertyValue<Money>("creditlimit"); }
	set { this.SetPropertyValue("creditlimit", (Money)value, (decimal)0, (decimal)100000000000000, "CreditLimitMoney"); }
}
///<summary>
///<para>Logical Name: creditlimit_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("creditlimit_base")]
public decimal? CreditLimit_Base
{
	get
	{
		if (CreditLimit_BaseMoney != null) { return CreditLimit_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: creditlimit_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("creditlimit_base")]
public Money CreditLimit_BaseMoney
{
	get { return this.GetPropertyValue<Money>("creditlimit_base"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyid</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyid")]
public EntityReference Currency
{
	get { return this.GetPropertyValue<EntityReference>("transactioncurrencyid"); }
	set { this.SetPropertyValue<EntityReference>("transactioncurrencyid", value, "Currency"); }
}
/// <summary>
///Logical Name: customersizecode
/// </summary>
[AttributeLogicalNameAttribute("customersizecode")]
public eCustomerSize? CustomerSize
{
	get
	{
		if (CustomerSize_OptionSetValue != null) { return (eCustomerSize)CustomerSize_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.CustomerSize_OptionSetValue = new OptionSetValue((int)value); }
		else this.CustomerSize_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: customersizecode</para>
///</summary>
[AttributeLogicalNameAttribute("customersizecode")]
public OptionSetValue CustomerSize_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("customersizecode"); }
	set { this.SetPropertyValue<OptionSetValue>("customersizecode", value, "CustomerSize_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string CustomerSize_Text(IOrganizationService Service)
{
	return this.CustomerSize_OptionSetValue.GetOptionSetText(Service, this, "customersizecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string CustomerSize_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.CustomerSize_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: description</para>
///<para>Max Length: 2000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("description")]
public string Description
{
	get { return this.GetPropertyValue<string>("description"); }
	set { this.SetPropertyValue("description", value, 2000, "Description"); }
}
///<summary>
///<para>Logical Name: donotbulkemail</para>
///<para>True = Do Not Allow</para>
///<para>False = Allow</para>
///</summary>
[AttributeLogicalNameAttribute("donotbulkemail")]
public bool? DoNotAllowBulkEmails
{
	get { return this.GetPropertyValue<bool?>("donotbulkemail"); }
	set { this.SetPropertyValue<bool?>("donotbulkemail", value, "DoNotAllowBulkEmails"); }
}
///<summary>
///<para>Logical Name: donotbulkpostalmail</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("donotbulkpostalmail")]
public bool? DoNotAllowBulkMails
{
	get { return this.GetPropertyValue<bool?>("donotbulkpostalmail"); }
	set { this.SetPropertyValue<bool?>("donotbulkpostalmail", value, "DoNotAllowBulkMails"); }
}
///<summary>
///<para>Logical Name: donotemail</para>
///<para>True = Do Not Allow</para>
///<para>False = Allow</para>
///</summary>
[AttributeLogicalNameAttribute("donotemail")]
public bool? DoNotAllowEmails
{
	get { return this.GetPropertyValue<bool?>("donotemail"); }
	set { this.SetPropertyValue<bool?>("donotemail", value, "DoNotAllowEmails"); }
}
///<summary>
///<para>Logical Name: donotfax</para>
///<para>True = Do Not Allow</para>
///<para>False = Allow</para>
///</summary>
[AttributeLogicalNameAttribute("donotfax")]
public bool? DoNotAllowFaxes
{
	get { return this.GetPropertyValue<bool?>("donotfax"); }
	set { this.SetPropertyValue<bool?>("donotfax", value, "DoNotAllowFaxes"); }
}
///<summary>
///<para>Logical Name: donotpostalmail</para>
///<para>True = Do Not Allow</para>
///<para>False = Allow</para>
///</summary>
[AttributeLogicalNameAttribute("donotpostalmail")]
public bool? DoNotAllowMails
{
	get { return this.GetPropertyValue<bool?>("donotpostalmail"); }
	set { this.SetPropertyValue<bool?>("donotpostalmail", value, "DoNotAllowMails"); }
}
///<summary>
///<para>Logical Name: donotphone</para>
///<para>True = Do Not Allow</para>
///<para>False = Allow</para>
///</summary>
[AttributeLogicalNameAttribute("donotphone")]
public bool? DoNotAllowPhoneCalls
{
	get { return this.GetPropertyValue<bool?>("donotphone"); }
	set { this.SetPropertyValue<bool?>("donotphone", value, "DoNotAllowPhoneCalls"); }
}
///<summary>
///<para>Logical Name: emailaddress1</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("emailaddress1")]
public string Email
{
	get { return this.GetPropertyValue<string>("emailaddress1"); }
	set { this.SetPropertyValue("emailaddress1", value, 100, "Email"); }
}
///<summary>
///<para>Logical Name: emailaddress2</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("emailaddress2")]
public string EmailAddress2
{
	get { return this.GetPropertyValue<string>("emailaddress2"); }
	set { this.SetPropertyValue("emailaddress2", value, 100, "EmailAddress2"); }
}
///<summary>
///<para>Logical Name: emailaddress3</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("emailaddress3")]
public string EmailAddress3
{
	get { return this.GetPropertyValue<string>("emailaddress3"); }
	set { this.SetPropertyValue("emailaddress3", value, 100, "EmailAddress3"); }
}
///<summary>
///<para>Logical Name: entityimageid</para>
///</summary>
[AttributeLogicalNameAttribute("entityimageid")]
public Guid EntityImageId
{
	get { return this.GetPropertyValue<Guid>("entityimageid"); }
}
///<summary>
///<para>Logical Name: exchangerate</para>
///<para>Minimum Value: 0.0000000001</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 10</para>
///</summary>
[AttributeLogicalNameAttribute("exchangerate")]
public decimal? ExchangeRate
{
	get { return this.GetPropertyValue<decimal?>("exchangerate"); }
}
///<summary>
///<para>Logical Name: fax</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("fax")]
public string Fax
{
	get { return this.GetPropertyValue<string>("fax"); }
	set { this.SetPropertyValue("fax", value, 50, "Fax"); }
}
///<summary>
///<para>Logical Name: followemail</para>
///<para>True = Allow</para>
///<para>False = Do Not Allow</para>
///</summary>
[AttributeLogicalNameAttribute("followemail")]
public bool? FollowEmailActivity
{
	get { return this.GetPropertyValue<bool?>("followemail"); }
	set { this.SetPropertyValue<bool?>("followemail", value, "FollowEmailActivity"); }
}
///<summary>
///<para>Logical Name: ftpsiteurl</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("ftpsiteurl")]
public string FTPSite
{
	get { return this.GetPropertyValue<string>("ftpsiteurl"); }
	set { this.SetPropertyValue("ftpsiteurl", value, 200, "FTPSite"); }
}
///<summary>
///<para>Logical Name: importsequencenumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("importsequencenumber")]
public int? ImportSequenceNumber
{
	get { return this.GetPropertyValue<int?>("importsequencenumber"); }
	set { this.SetPropertyValue("importsequencenumber", (int?)value, (int)-2147483648, (int)2147483647, "ImportSequenceNumber"); }
}
/// <summary>
///Logical Name: industrycode
/// </summary>
[AttributeLogicalNameAttribute("industrycode")]
public eIndustry? Industry
{
	get
	{
		if (Industry_OptionSetValue != null) { return (eIndustry)Industry_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Industry_OptionSetValue = new OptionSetValue((int)value); }
		else this.Industry_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: industrycode</para>
///</summary>
[AttributeLogicalNameAttribute("industrycode")]
public OptionSetValue Industry_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("industrycode"); }
	set { this.SetPropertyValue<OptionSetValue>("industrycode", value, "Industry_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Industry_Text(IOrganizationService Service)
{
	return this.Industry_OptionSetValue.GetOptionSetText(Service, this, "industrycode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Industry_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Industry_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: lastusedincampaign</para>
///</summary>
[AttributeLogicalNameAttribute("lastusedincampaign")]
public DateTime? LastDateIncludedInCampaign
{
	get { return this.GetPropertyValue<DateTime?>("lastusedincampaign"); }
	set { this.SetPropertyValue<DateTime?>("lastusedincampaign", value, "LastDateIncludedInCampaign"); }
}
///<summary>
///<para>Logical Name: lastonholdtime</para>
///</summary>
[AttributeLogicalNameAttribute("lastonholdtime")]
public DateTime? LastOnHoldTime
{
	get { return this.GetPropertyValue<DateTime?>("lastonholdtime"); }
	set { this.SetPropertyValue<DateTime?>("lastonholdtime", value, "LastOnHoldTime"); }
}
///<summary>
///<para>Logical Name: slainvokedid</para>
///</summary>
[AttributeLogicalNameAttribute("slainvokedid")]
public EntityReference LastSLAApplied
{
	get { return this.GetPropertyValue<EntityReference>("slainvokedid"); }
}
///<summary>
///<para>Logical Name: telephone1</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("telephone1")]
public string MainPhone
{
	get { return this.GetPropertyValue<string>("telephone1"); }
	set { this.SetPropertyValue("telephone1", value, 50, "MainPhone"); }
}
///<summary>
///<para>Logical Name: marketcap</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 100000000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("marketcap")]
public decimal? MarketCapitalization
{
	get
	{
		if (MarketCapitalizationMoney != null) { return MarketCapitalizationMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.MarketCapitalizationMoney = new Money(value.Value); }
		else this.MarketCapitalizationMoney = null;
	}
}
///<summary>
///<para>Logical Name: marketcap</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 100000000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("marketcap")]
public Money MarketCapitalizationMoney
{
	get { return this.GetPropertyValue<Money>("marketcap"); }
	set { this.SetPropertyValue("marketcap", (Money)value, (decimal)0, (decimal)100000000000000, "MarketCapitalizationMoney"); }
}
///<summary>
///<para>Logical Name: marketcap_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("marketcap_base")]
public decimal? MarketCapitalization_Base
{
	get
	{
		if (MarketCapitalization_BaseMoney != null) { return MarketCapitalization_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: marketcap_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("marketcap_base")]
public Money MarketCapitalization_BaseMoney
{
	get { return this.GetPropertyValue<Money>("marketcap_base"); }
}
///<summary>
///<para>Logical Name: marketingonly</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("marketingonly")]
public bool? MarketingOnly
{
	get { return this.GetPropertyValue<bool?>("marketingonly"); }
	set { this.SetPropertyValue<bool?>("marketingonly", value, "MarketingOnly"); }
}
///<summary>
///<para>Logical Name: masterid</para>
///</summary>
[AttributeLogicalNameAttribute("masterid")]
public EntityReference MasterID
{
	get { return this.GetPropertyValue<EntityReference>("masterid"); }
}
///<summary>
///<para>Logical Name: merged</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("merged")]
public bool? Merged
{
	get { return this.GetPropertyValue<bool?>("merged"); }
}
///<summary>
///<para>Logical Name: modifiedby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedby")]
public EntityReference ModifiedBy
{
	get { return this.GetPropertyValue<EntityReference>("modifiedby"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfby")]
public EntityReference ModifiedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("modifiedonbehalfby"); }
}
///<summary>
///<para>Logical Name: modifiedbyexternalparty</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyexternalparty")]
public EntityReference ModifiedBy_ExternalParty
{
	get { return this.GetPropertyValue<EntityReference>("modifiedbyexternalparty"); }
}
///<summary>
///<para>Logical Name: modifiedon</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedon")]
public DateTime? ModifiedOn
{
	get { return this.GetPropertyValue<DateTime?>("modifiedon"); }
}
///<summary>
///<para>Logical Name: numberofemployees</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///</summary>
[AttributeLogicalNameAttribute("numberofemployees")]
public int? NumberOfEmployees
{
	get { return this.GetPropertyValue<int?>("numberofemployees"); }
	set { this.SetPropertyValue("numberofemployees", (int?)value, (int)0, (int)1000000000, "NumberOfEmployees"); }
}
///<summary>
///<para>Logical Name: onholdtime</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("onholdtime")]
public int? OnHoldTime_Minutes
{
	get { return this.GetPropertyValue<int?>("onholdtime"); }
}
///<summary>
///<para>Logical Name: opendeals</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("opendeals")]
public int? OpenDeals
{
	get { return this.GetPropertyValue<int?>("opendeals"); }
}
///<summary>
///<para>Logical Name: opendeals_date</para>
///</summary>
[AttributeLogicalNameAttribute("opendeals_date")]
public DateTime? OpenDeals_LastUpdatedOn
{
	get { return this.GetPropertyValue<DateTime?>("opendeals_date"); }
}
///<summary>
///<para>Logical Name: opendeals_state</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("opendeals_state")]
public int? OpenDeals_State
{
	get { return this.GetPropertyValue<int?>("opendeals_state"); }
}
///<summary>
///<para>Logical Name: openrevenue</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("openrevenue")]
public decimal? OpenRevenue
{
	get
	{
		if (OpenRevenueMoney != null) { return OpenRevenueMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: openrevenue</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("openrevenue")]
public Money OpenRevenueMoney
{
	get { return this.GetPropertyValue<Money>("openrevenue"); }
}
///<summary>
///<para>Logical Name: openrevenue_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("openrevenue_base")]
public decimal? OpenRevenue_Base
{
	get
	{
		if (OpenRevenue_BaseMoney != null) { return OpenRevenue_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: openrevenue_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("openrevenue_base")]
public Money OpenRevenue_BaseMoney
{
	get { return this.GetPropertyValue<Money>("openrevenue_base"); }
}
///<summary>
///<para>Logical Name: openrevenue_date</para>
///</summary>
[AttributeLogicalNameAttribute("openrevenue_date")]
public DateTime? OpenRevenue_LastUpdatedOn
{
	get { return this.GetPropertyValue<DateTime?>("openrevenue_date"); }
}
///<summary>
///<para>Logical Name: openrevenue_state</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("openrevenue_state")]
public int? OpenRevenue_State
{
	get { return this.GetPropertyValue<int?>("openrevenue_state"); }
}
///<summary>
///<para>Logical Name: originatingleadid</para>
///</summary>
[AttributeLogicalNameAttribute("originatingleadid")]
public EntityReference OriginatingLead
{
	get { return this.GetPropertyValue<EntityReference>("originatingleadid"); }
	set { this.SetPropertyValue<EntityReference>("originatingleadid", value, "OriginatingLead"); }
}
///<summary>
///<para>Logical Name: telephone2</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("telephone2")]
public string OtherPhone
{
	get { return this.GetPropertyValue<string>("telephone2"); }
	set { this.SetPropertyValue("telephone2", value, 50, "OtherPhone"); }
}
///<summary>
///<para>Logical Name: ownerid</para>
///</summary>
[AttributeLogicalNameAttribute("ownerid")]
public EntityReference Owner
{
	get { return this.GetPropertyValue<EntityReference>("ownerid"); }
	set { this.SetPropertyValue<EntityReference>("ownerid", value, "Owner"); }
}
/// <summary>
///Logical Name: ownershipcode
/// </summary>
[AttributeLogicalNameAttribute("ownershipcode")]
public eOwnership? Ownership
{
	get
	{
		if (Ownership_OptionSetValue != null) { return (eOwnership)Ownership_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Ownership_OptionSetValue = new OptionSetValue((int)value); }
		else this.Ownership_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: ownershipcode</para>
///</summary>
[AttributeLogicalNameAttribute("ownershipcode")]
public OptionSetValue Ownership_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("ownershipcode"); }
	set { this.SetPropertyValue<OptionSetValue>("ownershipcode", value, "Ownership_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Ownership_Text(IOrganizationService Service)
{
	return this.Ownership_OptionSetValue.GetOptionSetText(Service, this, "ownershipcode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Ownership_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Ownership_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: owningbusinessunit</para>
///</summary>
[AttributeLogicalNameAttribute("owningbusinessunit")]
public EntityReference OwningBusinessUnit
{
	get { return this.GetPropertyValue<EntityReference>("owningbusinessunit"); }
}
///<summary>
///<para>Logical Name: owningteam</para>
///</summary>
[AttributeLogicalNameAttribute("owningteam")]
public EntityReference OwningTeam
{
	get { return this.GetPropertyValue<EntityReference>("owningteam"); }
}
///<summary>
///<para>Logical Name: owninguser</para>
///</summary>
[AttributeLogicalNameAttribute("owninguser")]
public EntityReference OwningUser
{
	get { return this.GetPropertyValue<EntityReference>("owninguser"); }
}
///<summary>
///<para>Logical Name: nhs_panelcodeprefix</para>
///<para>Max Length: 3 characters</para>
///</summary>
[AttributeLogicalNameAttribute("nhs_panelcodeprefix")]
public string PanelCodePrefix_Retired
{
	get { return this.GetPropertyValue<string>("nhs_panelcodeprefix"); }
	set { this.SetPropertyValue("nhs_panelcodeprefix", value, 3, "PanelCodePrefix_Retired"); }
}
///<summary>
///<para>Logical Name: parentaccountid</para>
///</summary>
[AttributeLogicalNameAttribute("parentaccountid")]
public EntityReference ParentAccount
{
	get { return this.GetPropertyValue<EntityReference>("parentaccountid"); }
	set { this.SetPropertyValue<EntityReference>("parentaccountid", value, "ParentAccount"); }
}
///<summary>
///<para>Logical Name: participatesinworkflow</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("participatesinworkflow")]
public bool? ParticipatesInWorkflow
{
	get { return this.GetPropertyValue<bool?>("participatesinworkflow"); }
	set { this.SetPropertyValue<bool?>("participatesinworkflow", value, "ParticipatesInWorkflow"); }
}
/// <summary>
///Logical Name: paymenttermscode
/// </summary>
[AttributeLogicalNameAttribute("paymenttermscode")]
public ePaymentTerms? PaymentTerms
{
	get
	{
		if (PaymentTerms_OptionSetValue != null) { return (ePaymentTerms)PaymentTerms_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.PaymentTerms_OptionSetValue = new OptionSetValue((int)value); }
		else this.PaymentTerms_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: paymenttermscode</para>
///</summary>
[AttributeLogicalNameAttribute("paymenttermscode")]
public OptionSetValue PaymentTerms_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("paymenttermscode"); }
	set { this.SetPropertyValue<OptionSetValue>("paymenttermscode", value, "PaymentTerms_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string PaymentTerms_Text(IOrganizationService Service)
{
	return this.PaymentTerms_OptionSetValue.GetOptionSetText(Service, this, "paymenttermscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string PaymentTerms_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.PaymentTerms_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: address1_postalcode</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_postalcode")]
public string Postal_ZIPCode
{
	get { return this.GetPropertyValue<string>("address1_postalcode"); }
	set { this.SetPropertyValue("address1_postalcode", value, 20, "Postal_ZIPCode"); }
}
/// <summary>
///Logical Name: preferredappointmentdaycode
/// </summary>
[AttributeLogicalNameAttribute("preferredappointmentdaycode")]
public ePreferredDay? PreferredDay
{
	get
	{
		if (PreferredDay_OptionSetValue != null) { return (ePreferredDay)PreferredDay_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.PreferredDay_OptionSetValue = new OptionSetValue((int)value); }
		else this.PreferredDay_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: preferredappointmentdaycode</para>
///</summary>
[AttributeLogicalNameAttribute("preferredappointmentdaycode")]
public OptionSetValue PreferredDay_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("preferredappointmentdaycode"); }
	set { this.SetPropertyValue<OptionSetValue>("preferredappointmentdaycode", value, "PreferredDay_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string PreferredDay_Text(IOrganizationService Service)
{
	return this.PreferredDay_OptionSetValue.GetOptionSetText(Service, this, "preferredappointmentdaycode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string PreferredDay_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.PreferredDay_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: preferredequipmentid</para>
///</summary>
[AttributeLogicalNameAttribute("preferredequipmentid")]
public EntityReference PreferredFacility_Equipment
{
	get { return this.GetPropertyValue<EntityReference>("preferredequipmentid"); }
	set { this.SetPropertyValue<EntityReference>("preferredequipmentid", value, "PreferredFacility_Equipment"); }
}
/// <summary>
///Logical Name: preferredcontactmethodcode
/// </summary>
[AttributeLogicalNameAttribute("preferredcontactmethodcode")]
public ePreferredMethodOfContact? PreferredMethodOfContact
{
	get
	{
		if (PreferredMethodOfContact_OptionSetValue != null) { return (ePreferredMethodOfContact)PreferredMethodOfContact_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.PreferredMethodOfContact_OptionSetValue = new OptionSetValue((int)value); }
		else this.PreferredMethodOfContact_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: preferredcontactmethodcode</para>
///</summary>
[AttributeLogicalNameAttribute("preferredcontactmethodcode")]
public OptionSetValue PreferredMethodOfContact_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("preferredcontactmethodcode"); }
	set { this.SetPropertyValue<OptionSetValue>("preferredcontactmethodcode", value, "PreferredMethodOfContact_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string PreferredMethodOfContact_Text(IOrganizationService Service)
{
	return this.PreferredMethodOfContact_OptionSetValue.GetOptionSetText(Service, this, "preferredcontactmethodcode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string PreferredMethodOfContact_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.PreferredMethodOfContact_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: preferredserviceid</para>
///</summary>
[AttributeLogicalNameAttribute("preferredserviceid")]
public EntityReference PreferredService
{
	get { return this.GetPropertyValue<EntityReference>("preferredserviceid"); }
	set { this.SetPropertyValue<EntityReference>("preferredserviceid", value, "PreferredService"); }
}
/// <summary>
///Logical Name: preferredappointmenttimecode
/// </summary>
[AttributeLogicalNameAttribute("preferredappointmenttimecode")]
public ePreferredTime? PreferredTime
{
	get
	{
		if (PreferredTime_OptionSetValue != null) { return (ePreferredTime)PreferredTime_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.PreferredTime_OptionSetValue = new OptionSetValue((int)value); }
		else this.PreferredTime_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: preferredappointmenttimecode</para>
///</summary>
[AttributeLogicalNameAttribute("preferredappointmenttimecode")]
public OptionSetValue PreferredTime_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("preferredappointmenttimecode"); }
	set { this.SetPropertyValue<OptionSetValue>("preferredappointmenttimecode", value, "PreferredTime_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string PreferredTime_Text(IOrganizationService Service)
{
	return this.PreferredTime_OptionSetValue.GetOptionSetText(Service, this, "preferredappointmenttimecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string PreferredTime_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.PreferredTime_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: preferredsystemuserid</para>
///</summary>
[AttributeLogicalNameAttribute("preferredsystemuserid")]
public EntityReference PreferredUser
{
	get { return this.GetPropertyValue<EntityReference>("preferredsystemuserid"); }
	set { this.SetPropertyValue<EntityReference>("preferredsystemuserid", value, "PreferredUser"); }
}
///<summary>
///<para>Logical Name: defaultpricelevelid</para>
///</summary>
[AttributeLogicalNameAttribute("defaultpricelevelid")]
public EntityReference PriceList
{
	get { return this.GetPropertyValue<EntityReference>("defaultpricelevelid"); }
	set { this.SetPropertyValue<EntityReference>("defaultpricelevelid", value, "PriceList"); }
}
///<summary>
///<para>Logical Name: primarycontactid</para>
///</summary>
[AttributeLogicalNameAttribute("primarycontactid")]
public EntityReference PrimaryContact
{
	get { return this.GetPropertyValue<EntityReference>("primarycontactid"); }
	set { this.SetPropertyValue<EntityReference>("primarycontactid", value, "PrimaryContact"); }
}
///<summary>
///<para>Logical Name: primarysatoriid</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("primarysatoriid")]
public string PrimarySatoriID
{
	get { return this.GetPropertyValue<string>("primarysatoriid"); }
	set { this.SetPropertyValue("primarysatoriid", value, 200, "PrimarySatoriID"); }
}
///<summary>
///<para>Logical Name: primarytwitterid</para>
///<para>Max Length: 128 characters</para>
///</summary>
[AttributeLogicalNameAttribute("primarytwitterid")]
public string PrimaryTwitterID
{
	get { return this.GetPropertyValue<string>("primarytwitterid"); }
	set { this.SetPropertyValue("primarytwitterid", value, 128, "PrimaryTwitterID"); }
}
///<summary>
///<para>Logical Name: processid</para>
///</summary>
[AttributeLogicalNameAttribute("processid")]
public Guid Process
{
	get { return this.GetPropertyValue<Guid>("processid"); }
	set { this.SetPropertyValue<Guid>("processid", value, "Process"); }
}
///<summary>
///<para>Logical Name: overriddencreatedon</para>
///</summary>
[AttributeLogicalNameAttribute("overriddencreatedon")]
public DateTime? RecordCreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("overriddencreatedon"); }
	set { this.SetPropertyValue<DateTime?>("overriddencreatedon", value, "RecordCreatedOn"); }
}
/// <summary>
///Logical Name: customertypecode
/// </summary>
[AttributeLogicalNameAttribute("customertypecode")]
public eRelationshipType? RelationshipType
{
	get
	{
		if (RelationshipType_OptionSetValue != null) { return (eRelationshipType)RelationshipType_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.RelationshipType_OptionSetValue = new OptionSetValue((int)value); }
		else this.RelationshipType_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: customertypecode</para>
///</summary>
[AttributeLogicalNameAttribute("customertypecode")]
public OptionSetValue RelationshipType_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("customertypecode"); }
	set { this.SetPropertyValue<OptionSetValue>("customertypecode", value, "RelationshipType_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string RelationshipType_Text(IOrganizationService Service)
{
	return this.RelationshipType_OptionSetValue.GetOptionSetText(Service, this, "customertypecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string RelationshipType_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.RelationshipType_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: donotsendmm</para>
///<para>True = Do Not Send</para>
///<para>False = Send</para>
///</summary>
[AttributeLogicalNameAttribute("donotsendmm")]
public bool? SendMarketingMaterials
{
	get { return this.GetPropertyValue<bool?>("donotsendmm"); }
	set { this.SetPropertyValue<bool?>("donotsendmm", value, "SendMarketingMaterials"); }
}
///<summary>
///<para>Logical Name: sharesoutstanding</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///</summary>
[AttributeLogicalNameAttribute("sharesoutstanding")]
public int? SharesOutstanding
{
	get { return this.GetPropertyValue<int?>("sharesoutstanding"); }
	set { this.SetPropertyValue("sharesoutstanding", (int?)value, (int)0, (int)1000000000, "SharesOutstanding"); }
}
/// <summary>
///Logical Name: shippingmethodcode
/// </summary>
[AttributeLogicalNameAttribute("shippingmethodcode")]
public eShippingMethod? ShippingMethod
{
	get
	{
		if (ShippingMethod_OptionSetValue != null) { return (eShippingMethod)ShippingMethod_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.ShippingMethod_OptionSetValue = new OptionSetValue((int)value); }
		else this.ShippingMethod_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: shippingmethodcode</para>
///</summary>
[AttributeLogicalNameAttribute("shippingmethodcode")]
public OptionSetValue ShippingMethod_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("shippingmethodcode"); }
	set { this.SetPropertyValue<OptionSetValue>("shippingmethodcode", value, "ShippingMethod_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string ShippingMethod_Text(IOrganizationService Service)
{
	return this.ShippingMethod_OptionSetValue.GetOptionSetText(Service, this, "shippingmethodcode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string ShippingMethod_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.ShippingMethod_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: sic</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("sic")]
public string SICCode
{
	get { return this.GetPropertyValue<string>("sic"); }
	set { this.SetPropertyValue("sic", value, 20, "SICCode"); }
}
///<summary>
///<para>Logical Name: slaid</para>
///</summary>
[AttributeLogicalNameAttribute("slaid")]
public EntityReference SLA
{
	get { return this.GetPropertyValue<EntityReference>("slaid"); }
	set { this.SetPropertyValue<EntityReference>("slaid", value, "SLA"); }
}
/// <summary>
///Logical Name: statecode
/// </summary>
[AttributeLogicalNameAttribute("statecode")]
public eStatus? Status
{
	get
	{
		if (Status_OptionSetValue != null) { return (eStatus)Status_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Status_OptionSetValue = new OptionSetValue((int)value); }
		else this.Status_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statecode</para>
///</summary>
[AttributeLogicalNameAttribute("statecode")]
public OptionSetValue Status_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statecode"); }
	set { this.SetPropertyValue<OptionSetValue>("statecode", value, "Status_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Status_Text(IOrganizationService Service)
{
	return this.Status_OptionSetValue.GetOptionSetText(Service, this, "statecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Status_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Status_OptionSetValue.Value);
}
/// <summary>
///Logical Name: statuscode
/// </summary>
[AttributeLogicalNameAttribute("statuscode")]
public eStatusReason? StatusReason
{
	get
	{
		if (StatusReason_OptionSetValue != null) { return (eStatusReason)StatusReason_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.StatusReason_OptionSetValue = new OptionSetValue((int)value); }
		else this.StatusReason_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statuscode</para>
///</summary>
[AttributeLogicalNameAttribute("statuscode")]
public OptionSetValue StatusReason_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statuscode"); }
	set { this.SetPropertyValue<OptionSetValue>("statuscode", value, "StatusReason_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string StatusReason_Text(IOrganizationService Service)
{
	return this.StatusReason_OptionSetValue.GetOptionSetText(Service, this, "statuscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string StatusReason_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.StatusReason_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: stockexchange</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("stockexchange")]
public string StockExchange
{
	get { return this.GetPropertyValue<string>("stockexchange"); }
	set { this.SetPropertyValue("stockexchange", value, 20, "StockExchange"); }
}
///<summary>
///<para>Logical Name: nhs_team</para>
///</summary>
[AttributeLogicalNameAttribute("nhs_team")]
public EntityReference Team
{
	get { return this.GetPropertyValue<EntityReference>("nhs_team"); }
	set { this.SetPropertyValue<EntityReference>("nhs_team", value, "Team"); }
}
///<summary>
///<para>Logical Name: teamsfollowed</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("teamsfollowed")]
public int? TeamsFollowed
{
	get { return this.GetPropertyValue<int?>("teamsfollowed"); }
	set { this.SetPropertyValue("teamsfollowed", (int?)value, (int)-2147483648, (int)2147483647, "TeamsFollowed"); }
}
///<summary>
///<para>Logical Name: telephone3</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("telephone3")]
public string Telephone3
{
	get { return this.GetPropertyValue<string>("telephone3"); }
	set { this.SetPropertyValue("telephone3", value, 50, "Telephone3"); }
}
///<summary>
///<para>Logical Name: territoryid</para>
///</summary>
[AttributeLogicalNameAttribute("territoryid")]
public EntityReference Territory
{
	get { return this.GetPropertyValue<EntityReference>("territoryid"); }
	set { this.SetPropertyValue<EntityReference>("territoryid", value, "Territory"); }
}
/// <summary>
///Logical Name: territorycode
/// </summary>
[AttributeLogicalNameAttribute("territorycode")]
public eTerritoryCode? TerritoryCode
{
	get
	{
		if (TerritoryCode_OptionSetValue != null) { return (eTerritoryCode)TerritoryCode_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.TerritoryCode_OptionSetValue = new OptionSetValue((int)value); }
		else this.TerritoryCode_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: territorycode</para>
///</summary>
[AttributeLogicalNameAttribute("territorycode")]
public OptionSetValue TerritoryCode_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("territorycode"); }
	set { this.SetPropertyValue<OptionSetValue>("territorycode", value, "TerritoryCode_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string TerritoryCode_Text(IOrganizationService Service)
{
	return this.TerritoryCode_OptionSetValue.GetOptionSetText(Service, this, "territorycode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string TerritoryCode_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.TerritoryCode_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: tickersymbol</para>
///<para>Max Length: 10 characters</para>
///</summary>
[AttributeLogicalNameAttribute("tickersymbol")]
public string TickerSymbol
{
	get { return this.GetPropertyValue<string>("tickersymbol"); }
	set { this.SetPropertyValue("tickersymbol", value, 10, "TickerSymbol"); }
}
///<summary>
///<para>Logical Name: timespentbymeonemailandmeetings</para>
///<para>Max Length: 1250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("timespentbymeonemailandmeetings")]
public string TimeSpentByMe
{
	get { return this.GetPropertyValue<string>("timespentbymeonemailandmeetings"); }
}
///<summary>
///<para>Logical Name: timezoneruleversionnumber</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("timezoneruleversionnumber")]
public int? TimeZoneRuleVersionNumber
{
	get { return this.GetPropertyValue<int?>("timezoneruleversionnumber"); }
	set { this.SetPropertyValue("timezoneruleversionnumber", (int?)value, (int)-1, (int)2147483647, "TimeZoneRuleVersionNumber"); }
}
///<summary>
///<para>Logical Name: utcconversiontimezonecode</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("utcconversiontimezonecode")]
public int? UTCConversionTimeZoneCode
{
	get { return this.GetPropertyValue<int?>("utcconversiontimezonecode"); }
	set { this.SetPropertyValue("utcconversiontimezonecode", (int?)value, (int)-1, (int)2147483647, "UTCConversionTimeZoneCode"); }
}
///<summary>
///<para>Logical Name: versionnumber</para>
///</summary>
[AttributeLogicalNameAttribute("versionnumber")]
public int? VersionNumber
{
	get { return this.GetPropertyValue<int?>("versionnumber"); }
}
///<summary>
///<para>Logical Name: websiteurl</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("websiteurl")]
public string Website
{
	get { return this.GetPropertyValue<string>("websiteurl"); }
	set { this.SetPropertyValue("websiteurl", value, 200, "Website"); }
}
///<summary>
///<para>Logical Name: yominame</para>
///<para>Max Length: 160 characters</para>
///</summary>
[AttributeLogicalNameAttribute("yominame")]
public string YomiAccountName
{
	get { return this.GetPropertyValue<string>("yominame"); }
	set { this.SetPropertyValue("yominame", value, 160, "YomiAccountName"); }
}


        /// <summary>
/// <para><b>Account (Master ID)</b></para>
/// <para>Schema Name: account_master_account</para>
/// </summary>
public List<Account> GetAccounts_MasterID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Account>(Service, this.Id, "account", "masterid", Columns); }
/// <summary>
/// <para><b>Account (Master ID)</b></para>
/// <para>Schema Name: account_master_account</para>
/// </summary>
public List<Account> GetAccounts_MasterID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Account>(Service, this.Id, "account", "masterid", Columns); }
/// <summary>
/// <para><b>Account (Parent Account)</b></para>
/// <para>Schema Name: account_parent_account</para>
/// </summary>
public List<Account> GetAccounts_ParentAccount (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Account>(Service, this.Id, "account", "parentaccountid", Columns); }
/// <summary>
/// <para><b>Account (Parent Account)</b></para>
/// <para>Schema Name: account_parent_account</para>
/// </summary>
public List<Account> GetAccounts_ParentAccount (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Account>(Service, this.Id, "account", "parentaccountid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_actioncard</para>
/// </summary>
public List<Entity> GetActionCards (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "actioncard", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_actioncard</para>
/// </summary>
public List<Entity> GetActionCards (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "actioncard", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_activity_parties</para>
/// </summary>
public List<Entity> GetActivityParties (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "activityparty", "partyid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_activity_parties</para>
/// </summary>
public List<Entity> GetActivityParties (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "activityparty", "partyid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_ActivityPointers</para>
/// </summary>
public List<Entity> GetActivities (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "activitypointer", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_ActivityPointers</para>
/// </summary>
public List<Entity> GetActivities (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "activitypointer", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_Annotation</para>
/// </summary>
public List<Entity> GetNotes (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_Annotation</para>
/// </summary>
public List<Entity> GetNotes (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_Appointments</para>
/// </summary>
public List<Entity> GetAppointments (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "appointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_Appointments</para>
/// </summary>
public List<Entity> GetAppointments (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "appointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_AsyncOperations</para>
/// </summary>
public List<Entity> GetSystemJobs (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_AsyncOperations</para>
/// </summary>
public List<Entity> GetSystemJobs (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_bookableresource_AccountId</para>
/// </summary>
public List<Entity> GetBookableResources (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bookableresource", "accountid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_bookableresource_AccountId</para>
/// </summary>
public List<Entity> GetBookableResources (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bookableresource", "accountid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_BulkDeleteFailures</para>
/// </summary>
public List<Entity> GetBulkDeleteFailures (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_BulkDeleteFailures</para>
/// </summary>
public List<Entity> GetBulkDeleteFailures (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_BulkOperations</para>
/// </summary>
public List<Entity> GetQuickCampaigns (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bulkoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_BulkOperations</para>
/// </summary>
public List<Entity> GetQuickCampaigns (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bulkoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: CreatedAccount_BulkOperationLogs2</para>
/// </summary>
public List<Entity> GetBulkOperationLogs (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bulkoperationlog", "createdobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: CreatedAccount_BulkOperationLogs2</para>
/// </summary>
public List<Entity> GetBulkOperationLogs (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bulkoperationlog", "createdobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: SourceAccount_BulkOperationLogs</para>
/// </summary>
public List<Entity> GetBulkOperationLogs2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bulkoperationlog", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: SourceAccount_BulkOperationLogs</para>
/// </summary>
public List<Entity> GetBulkOperationLogs2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bulkoperationlog", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_CampaignResponses</para>
/// </summary>
public List<Entity> GetCampaignResponses (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "campaignresponse", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_CampaignResponses</para>
/// </summary>
public List<Entity> GetCampaignResponses (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "campaignresponse", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_connections1</para>
/// </summary>
public List<Entity> GetConnections (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_connections1</para>
/// </summary>
public List<Entity> GetConnections (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_connections2</para>
/// </summary>
public List<Entity> GetConnections2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_connections2</para>
/// </summary>
public List<Entity> GetConnections2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>Contact (Company Name)</b></para>
/// <para>Schema Name: contact_customer_accounts</para>
/// </summary>
public List<Contact> GetContacts_CompanyName (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Contact>(Service, this.Id, "contact", "parentcustomerid", Columns); }
/// <summary>
/// <para><b>Contact (Company Name)</b></para>
/// <para>Schema Name: contact_customer_accounts</para>
/// </summary>
public List<Contact> GetContacts_CompanyName (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Contact>(Service, this.Id, "contact", "parentcustomerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contract_billingcustomer_accounts</para>
/// </summary>
public List<Entity> GetContracts (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "contract", "billingcustomerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contract_billingcustomer_accounts</para>
/// </summary>
public List<Entity> GetContracts (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "contract", "billingcustomerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contract_customer_accounts</para>
/// </summary>
public List<Entity> GetContracts2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "contract", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contract_customer_accounts</para>
/// </summary>
public List<Entity> GetContracts2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "contract", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contractlineitem_customer_accounts</para>
/// </summary>
public List<Entity> GetContractLines (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "contractdetail", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contractlineitem_customer_accounts</para>
/// </summary>
public List<Entity> GetContractLines (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "contractdetail", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_CustomerAddress</para>
/// </summary>
public List<Entity> GetAddresses (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "customeraddress", "parentid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_CustomerAddress</para>
/// </summary>
public List<Entity> GetAddresses (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "customeraddress", "parentid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_customer_opportunity_roles</para>
/// </summary>
public List<Entity> GetOpportunityRelationships (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "customeropportunityrole", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_customer_opportunity_roles</para>
/// </summary>
public List<Entity> GetOpportunityRelationships (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "customeropportunityrole", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_customer_relationship_customer</para>
/// </summary>
public List<Entity> GetCustomerRelationships (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "customerrelationship", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_customer_relationship_customer</para>
/// </summary>
public List<Entity> GetCustomerRelationships (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "customerrelationship", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_customer_relationship_partner</para>
/// </summary>
public List<Entity> GetCustomerRelationships2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "customerrelationship", "partnerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_customer_relationship_partner</para>
/// </summary>
public List<Entity> GetCustomerRelationships2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "customerrelationship", "partnerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_DuplicateBaseRecord</para>
/// </summary>
public List<Entity> GetDuplicateRecords (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_DuplicateBaseRecord</para>
/// </summary>
public List<Entity> GetDuplicateRecords (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_DuplicateMatchingRecord</para>
/// </summary>
public List<Entity> GetDuplicateRecords2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_DuplicateMatchingRecord</para>
/// </summary>
public List<Entity> GetDuplicateRecords2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_Email_EmailSender</para>
/// </summary>
public List<Entity> GetEmailMessages (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "email", "emailsender", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_Email_EmailSender</para>
/// </summary>
public List<Entity> GetEmailMessages (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "email", "emailsender", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_Email_SendersAccount</para>
/// </summary>
public List<Entity> GetEmailMessages2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "email", "sendersaccount", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_Email_SendersAccount</para>
/// </summary>
public List<Entity> GetEmailMessages2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "email", "sendersaccount", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_Emails</para>
/// </summary>
public List<Entity> GetEmailMessages3 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "email", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_Emails</para>
/// </summary>
public List<Entity> GetEmailMessages3 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "email", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_entitlement_Account</para>
/// </summary>
public List<Entity> GetEntitlements (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "entitlement", "accountid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_entitlement_Account</para>
/// </summary>
public List<Entity> GetEntitlements (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "entitlement", "accountid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_entitlement_Customer</para>
/// </summary>
public List<Entity> GetEntitlements2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "entitlement", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_entitlement_Customer</para>
/// </summary>
public List<Entity> GetEntitlements2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "entitlement", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_Faxes</para>
/// </summary>
public List<Entity> GetFaxes (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "fax", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_Faxes</para>
/// </summary>
public List<Entity> GetFaxes (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "fax", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: incident_customer_accounts</para>
/// </summary>
public List<Entity> GetCases (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "incident", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: incident_customer_accounts</para>
/// </summary>
public List<Entity> GetCases (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "incident", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_IncidentResolutions</para>
/// </summary>
public List<Entity> GetCaseResolutions (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "incidentresolution", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_IncidentResolutions</para>
/// </summary>
public List<Entity> GetCaseResolutions (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "incidentresolution", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: invoice_customer_accounts</para>
/// </summary>
public List<Entity> GetInvoices (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "invoice", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: invoice_customer_accounts</para>
/// </summary>
public List<Entity> GetInvoices (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "invoice", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: lead_customer_accounts</para>
/// </summary>
public List<Entity> GetLeads (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "lead", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: lead_customer_accounts</para>
/// </summary>
public List<Entity> GetLeads (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "lead", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: lead_parent_account</para>
/// </summary>
public List<Entity> GetLeads2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "lead", "parentaccountid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: lead_parent_account</para>
/// </summary>
public List<Entity> GetLeads2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "lead", "parentaccountid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_Letters</para>
/// </summary>
public List<Entity> GetLetters (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "letter", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_Letters</para>
/// </summary>
public List<Entity> GetLetters (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "letter", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_MailboxTrackingFolder</para>
/// </summary>
public List<Entity> GetMailboxAutoTrackingFolders (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_MailboxTrackingFolder</para>
/// </summary>
public List<Entity> GetMailboxAutoTrackingFolders (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_playbookinstance_account</para>
/// </summary>
public List<Entity> GetPlaybooks (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_playbookinstance", "regarding", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_playbookinstance_account</para>
/// </summary>
public List<Entity> GetPlaybooks (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_playbookinstance", "regarding", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_msfp_surveyinvites</para>
/// </summary>
public List<Entity> GetFormsProSurveyInvites (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msfp_surveyinvite", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_msfp_surveyinvites</para>
/// </summary>
public List<Entity> GetFormsProSurveyInvites (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msfp_surveyinvite", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_msfp_surveyresponses</para>
/// </summary>
public List<Entity> GetFormsProSurveyResponses (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msfp_surveyresponse", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_msfp_surveyresponses</para>
/// </summary>
public List<Entity> GetFormsProSurveyResponses (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msfp_surveyresponse", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity (Parent Account)</b></para>
/// <para>Schema Name: nhs_account_nhs_rarebloodsource_ParentAccount</para>
/// </summary>
public List<Entity> GetRareBloodSources_ParentAccount (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "nhs_rarebloodsource", "nhs_parentaccount", Columns); }
/// <summary>
/// <para><b>Entity (Parent Account)</b></para>
/// <para>Schema Name: nhs_account_nhs_rarebloodsource_ParentAccount</para>
/// </summary>
public List<Entity> GetRareBloodSources_ParentAccount (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "nhs_rarebloodsource", "nhs_parentaccount", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: opportunity_customer_accounts</para>
/// </summary>
public List<Entity> GetOpportunities (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "opportunity", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: opportunity_customer_accounts</para>
/// </summary>
public List<Entity> GetOpportunities (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "opportunity", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: opportunity_parent_account</para>
/// </summary>
public List<Entity> GetOpportunities2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "opportunity", "parentaccountid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: opportunity_parent_account</para>
/// </summary>
public List<Entity> GetOpportunities2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "opportunity", "parentaccountid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_OpportunityCloses</para>
/// </summary>
public List<Entity> GetOpportunityCloseActivities (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "opportunityclose", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_OpportunityCloses</para>
/// </summary>
public List<Entity> GetOpportunityCloseActivities (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "opportunityclose", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_OrderCloses</para>
/// </summary>
public List<Entity> GetOrderCloseActivities (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "orderclose", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_OrderCloses</para>
/// </summary>
public List<Entity> GetOrderCloseActivities (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "orderclose", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_Phonecalls</para>
/// </summary>
public List<Entity> GetPhoneCalls (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "phonecall", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_Phonecalls</para>
/// </summary>
public List<Entity> GetPhoneCalls (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "phonecall", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_PostFollows</para>
/// </summary>
public List<Entity> GetFollows (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "postfollow", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_PostFollows</para>
/// </summary>
public List<Entity> GetFollows (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "postfollow", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_PostRegardings</para>
/// </summary>
public List<Entity> GetPostRegarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "postregarding", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_PostRegardings</para>
/// </summary>
public List<Entity> GetPostRegarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "postregarding", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_PostRoles</para>
/// </summary>
public List<Entity> GetPostRoles (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "postrole", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_PostRoles</para>
/// </summary>
public List<Entity> GetPostRoles (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "postrole", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_principalobjectattributeaccess</para>
/// </summary>
public List<Entity> GetFieldSharing (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_principalobjectattributeaccess</para>
/// </summary>
public List<Entity> GetFieldSharing (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_ProcessSessions</para>
/// </summary>
public List<Entity> GetProcessSessions (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_ProcessSessions</para>
/// </summary>
public List<Entity> GetProcessSessions (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: quote_customer_accounts</para>
/// </summary>
public List<Entity> GetQuotes (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "quote", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: quote_customer_accounts</para>
/// </summary>
public List<Entity> GetQuotes (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "quote", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_QuoteCloses</para>
/// </summary>
public List<Entity> GetQuoteCloseActivities (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "quoteclose", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_QuoteCloses</para>
/// </summary>
public List<Entity> GetQuoteCloseActivities (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "quoteclose", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_RecurringAppointmentMasters</para>
/// </summary>
public List<Entity> GetRecurringAppointments (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "recurringappointmentmaster", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_RecurringAppointmentMasters</para>
/// </summary>
public List<Entity> GetRecurringAppointments (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "recurringappointmentmaster", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: order_customer_accounts</para>
/// </summary>
public List<Entity> GetOrders (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "salesorder", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: order_customer_accounts</para>
/// </summary>
public List<Entity> GetOrders (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "salesorder", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_ServiceAppointments</para>
/// </summary>
public List<Entity> GetServiceActivities (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "serviceappointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_ServiceAppointments</para>
/// </summary>
public List<Entity> GetServiceActivities (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "serviceappointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_SharepointDocument</para>
/// </summary>
public List<Entity> GetDocuments (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "sharepointdocument", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_SharepointDocument</para>
/// </summary>
public List<Entity> GetDocuments (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "sharepointdocument", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_SharepointDocumentLocation</para>
/// </summary>
public List<Entity> GetDocumentLocations (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "sharepointdocumentlocation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_SharepointDocumentLocation</para>
/// </summary>
public List<Entity> GetDocumentLocations (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "sharepointdocumentlocation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: slakpiinstance_account</para>
/// </summary>
public List<Entity> GetSLAKPIInstances (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "slakpiinstance", "regarding", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: slakpiinstance_account</para>
/// </summary>
public List<Entity> GetSLAKPIInstances (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "slakpiinstance", "regarding", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_SocialActivities</para>
/// </summary>
public List<Entity> GetSocialActivities (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "socialactivity", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_SocialActivities</para>
/// </summary>
public List<Entity> GetSocialActivities (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "socialactivity", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: SocialActivity_PostAuthor_accounts</para>
/// </summary>
public List<Entity> GetSocialActivities2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "socialactivity", "postauthor", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: SocialActivity_PostAuthor_accounts</para>
/// </summary>
public List<Entity> GetSocialActivities2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "socialactivity", "postauthor", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: SocialActivity_PostAuthorAccount_accounts</para>
/// </summary>
public List<Entity> GetSocialActivities3 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "socialactivity", "postauthoraccount", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: SocialActivity_PostAuthorAccount_accounts</para>
/// </summary>
public List<Entity> GetSocialActivities3 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "socialactivity", "postauthoraccount", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Socialprofile_customer_accounts</para>
/// </summary>
public List<Entity> GetSocialProfiles (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "socialprofile", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Socialprofile_customer_accounts</para>
/// </summary>
public List<Entity> GetSocialProfiles (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "socialprofile", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_SyncErrors</para>
/// </summary>
public List<Entity> GetSyncErrors (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_SyncErrors</para>
/// </summary>
public List<Entity> GetSyncErrors (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_Tasks</para>
/// </summary>
public List<Entity> GetTasks (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "task", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Account_Tasks</para>
/// </summary>
public List<Entity> GetTasks (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "task", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: nhs_account_team_Account</para>
/// </summary>
public List<Entity> GetTeams (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "team", "nhs_account", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: nhs_account_team_Account</para>
/// </summary>
public List<Entity> GetTeams (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "team", "nhs_account", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: userentityinstancedata_account</para>
/// </summary>
public List<Entity> GetUserEntityInstanceData (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: userentityinstancedata_account</para>
/// </summary>
public List<Entity> GetUserEntityInstanceData (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "userentityinstancedata", "objectid", Columns); }


        /// <summary>
/// <para>Related Entity: <b>Lead</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: accountleads_association</para>
/// </summary>
public List<Entity> GetLeads3 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "account", "accountid", "lead", "leadid", "accountleads", "leadid", "accountid", Columns); }
public List<Entity> GetLeads3 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "account", "accountid", "lead", "leadid", "accountleads", "leadid", "accountid", Columns); }
public void RelateLeads (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "accountleads_association", Items); }
public void RelateLeads (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "accountleads_association", Items); }
public void UnRelateLeads (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "accountleads_association", Items); }
public void UnRelateLeads (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "accountleads_association", Items); }
/// <summary>
/// <para>Related Entity: <b>Quick Campaign</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: BulkOperation_Accounts</para>
/// </summary>
public List<Entity> GetQuickCampaigns2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "account", "accountid", "bulkoperation", "activityid", "bulkoperationlog", "regardingobjectid", "bulkoperationid", Columns); }
public List<Entity> GetQuickCampaigns2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "account", "accountid", "bulkoperation", "activityid", "bulkoperationlog", "regardingobjectid", "bulkoperationid", Columns); }
public void RelateQuickCampaigns (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "BulkOperation_Accounts", Items); }
public void RelateQuickCampaigns (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "BulkOperation_Accounts", Items); }
public void UnRelateQuickCampaigns (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "BulkOperation_Accounts", Items); }
public void UnRelateQuickCampaigns (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "BulkOperation_Accounts", Items); }
/// <summary>
/// <para>Related Entity: <b>Campaign Activity</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: CampaignActivity_Accounts</para>
/// </summary>
public List<Entity> GetCampaignActivities (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "account", "accountid", "campaignactivity", "activityid", "bulkoperationlog", "regardingobjectid", "campaignactivityid", Columns); }
public List<Entity> GetCampaignActivities (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "account", "accountid", "campaignactivity", "activityid", "bulkoperationlog", "regardingobjectid", "campaignactivityid", Columns); }
public void RelateCampaignActivities (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "CampaignActivity_Accounts", Items); }
public void RelateCampaignActivities (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "CampaignActivity_Accounts", Items); }
public void UnRelateCampaignActivities (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "CampaignActivity_Accounts", Items); }
public void UnRelateCampaignActivities (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "CampaignActivity_Accounts", Items); }
/// <summary>
/// <para>Related Entity: <b>Marketing List</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: listaccount_association</para>
/// </summary>
public List<Entity> GetMarketingLists (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "account", "accountid", "list", "listid", "listmember", "entityid", "listid", Columns); }
public List<Entity> GetMarketingLists (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "account", "accountid", "list", "listid", "listmember", "entityid", "listid", Columns); }
public void RelateMarketingLists (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "listaccount_association", Items); }
public void RelateMarketingLists (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "listaccount_association", Items); }
public void UnRelateMarketingLists (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "listaccount_association", Items); }
public void UnRelateMarketingLists (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "listaccount_association", Items); }


        

        public enum eAccountRating
{
	///<summary><para>Default Value</para>
	///<para>Value = 1</para></summary>
	[Description("Default Value")]
	DefaultValue = 1
}
public enum eAddress1_AddressType
{
	///<summary><para>Bill To</para>
	///<para>Value = 1</para></summary>
	[Description("Bill To")]
	BillTo = 1, 
	///<summary><para>Ship To</para>
	///<para>Value = 2</para></summary>
	[Description("Ship To")]
	ShipTo = 2, 
	///<summary><para>Primary</para>
	///<para>Value = 3</para></summary>
	[Description("Primary")]
	Primary = 3, 
	///<summary><para>Other</para>
	///<para>Value = 4</para></summary>
	[Description("Other")]
	Other = 4
}
public enum eAddress1_FreightTerms
{
	///<summary><para>FOB</para>
	///<para>Value = 1</para></summary>
	[Description("FOB")]
	FOB = 1, 
	///<summary><para>No Charge</para>
	///<para>Value = 2</para></summary>
	[Description("No Charge")]
	NoCharge = 2
}
public enum eAddress1_ShippingMethod
{
	///<summary><para>Airborne</para>
	///<para>Value = 1</para></summary>
	[Description("Airborne")]
	Airborne = 1, 
	///<summary><para>DHL</para>
	///<para>Value = 2</para></summary>
	[Description("DHL")]
	DHL = 2, 
	///<summary><para>FedEx</para>
	///<para>Value = 3</para></summary>
	[Description("FedEx")]
	FedEx = 3, 
	///<summary><para>UPS</para>
	///<para>Value = 4</para></summary>
	[Description("UPS")]
	UPS = 4, 
	///<summary><para>Postal Mail</para>
	///<para>Value = 5</para></summary>
	[Description("Postal Mail")]
	PostalMail = 5, 
	///<summary><para>Full Load</para>
	///<para>Value = 6</para></summary>
	[Description("Full Load")]
	FullLoad = 6, 
	///<summary><para>Will Call</para>
	///<para>Value = 7</para></summary>
	[Description("Will Call")]
	WillCall = 7
}
public enum eAddress2_AddressType
{
	///<summary><para>Default Value</para>
	///<para>Value = 1</para></summary>
	[Description("Default Value")]
	DefaultValue = 1
}
public enum eAddress2_FreightTerms
{
	///<summary><para>Default Value</para>
	///<para>Value = 1</para></summary>
	[Description("Default Value")]
	DefaultValue = 1
}
public enum eAddress2_ShippingMethod
{
	///<summary><para>Default Value</para>
	///<para>Value = 1</para></summary>
	[Description("Default Value")]
	DefaultValue = 1
}
public enum eBusinessType
{
	///<summary><para>Default Value</para>
	///<para>Value = 1</para></summary>
	[Description("Default Value")]
	DefaultValue = 1
}
public enum eCategory
{
	///<summary><para>Preferred Customer</para>
	///<para>Value = 1</para></summary>
	[Description("Preferred Customer")]
	PreferredCustomer = 1, 
	///<summary><para>Standard</para>
	///<para>Value = 2</para></summary>
	[Description("Standard")]
	Standard = 2
}
public enum eClassification
{
	///<summary><para>Default Value</para>
	///<para>Value = 1</para></summary>
	[Description("Default Value")]
	DefaultValue = 1
}
public enum eCustomerSize
{
	///<summary><para>Default Value</para>
	///<para>Value = 1</para></summary>
	[Description("Default Value")]
	DefaultValue = 1
}
public enum eIndustry
{
	///<summary><para>Accounting</para>
	///<para>Value = 1</para></summary>
	[Description("Accounting")]
	Accounting = 1, 
	///<summary><para>Agriculture and Non-petrol Natural Resource Extraction</para>
	///<para>Value = 2</para></summary>
	[Description("Agriculture and Non-petrol Natural Resource Extraction")]
	AgricultureAndNon_petrolNaturalResourceExtraction = 2, 
	///<summary><para>Broadcasting Printing and Publishing</para>
	///<para>Value = 3</para></summary>
	[Description("Broadcasting Printing and Publishing")]
	BroadcastingPrintingAndPublishing = 3, 
	///<summary><para>Brokers</para>
	///<para>Value = 4</para></summary>
	[Description("Brokers")]
	Brokers = 4, 
	///<summary><para>Building Supply Retail</para>
	///<para>Value = 5</para></summary>
	[Description("Building Supply Retail")]
	BuildingSupplyRetail = 5, 
	///<summary><para>Business Services</para>
	///<para>Value = 6</para></summary>
	[Description("Business Services")]
	BusinessServices = 6, 
	///<summary><para>Consulting</para>
	///<para>Value = 7</para></summary>
	[Description("Consulting")]
	Consulting = 7, 
	///<summary><para>Consumer Services</para>
	///<para>Value = 8</para></summary>
	[Description("Consumer Services")]
	ConsumerServices = 8, 
	///<summary><para>Design, Direction and Creative Management</para>
	///<para>Value = 9</para></summary>
	[Description("Design, Direction and Creative Management")]
	Design_DirectionAndCreativeManagement = 9, 
	///<summary><para>Distributors, Dispatchers and Processors</para>
	///<para>Value = 10</para></summary>
	[Description("Distributors, Dispatchers and Processors")]
	Distributors_DispatchersAndProcessors = 10, 
	///<summary><para>Doctor's Offices and Clinics</para>
	///<para>Value = 11</para></summary>
	[Description("Doctor's Offices and Clinics")]
	DoctorsOfficesAndClinics = 11, 
	///<summary><para>Durable Manufacturing</para>
	///<para>Value = 12</para></summary>
	[Description("Durable Manufacturing")]
	DurableManufacturing = 12, 
	///<summary><para>Eating and Drinking Places</para>
	///<para>Value = 13</para></summary>
	[Description("Eating and Drinking Places")]
	EatingAndDrinkingPlaces = 13, 
	///<summary><para>Entertainment Retail</para>
	///<para>Value = 14</para></summary>
	[Description("Entertainment Retail")]
	EntertainmentRetail = 14, 
	///<summary><para>Equipment Rental and Leasing</para>
	///<para>Value = 15</para></summary>
	[Description("Equipment Rental and Leasing")]
	EquipmentRentalAndLeasing = 15, 
	///<summary><para>Financial</para>
	///<para>Value = 16</para></summary>
	[Description("Financial")]
	Financial = 16, 
	///<summary><para>Food and Tobacco Processing</para>
	///<para>Value = 17</para></summary>
	[Description("Food and Tobacco Processing")]
	FoodAndTobaccoProcessing = 17, 
	///<summary><para>Inbound Capital Intensive Processing</para>
	///<para>Value = 18</para></summary>
	[Description("Inbound Capital Intensive Processing")]
	InboundCapitalIntensiveProcessing = 18, 
	///<summary><para>Inbound Repair and Services</para>
	///<para>Value = 19</para></summary>
	[Description("Inbound Repair and Services")]
	InboundRepairAndServices = 19, 
	///<summary><para>Insurance</para>
	///<para>Value = 20</para></summary>
	[Description("Insurance")]
	Insurance = 20, 
	///<summary><para>Legal Services</para>
	///<para>Value = 21</para></summary>
	[Description("Legal Services")]
	LegalServices = 21, 
	///<summary><para>Non-Durable Merchandise Retail</para>
	///<para>Value = 22</para></summary>
	[Description("Non-Durable Merchandise Retail")]
	Non_DurableMerchandiseRetail = 22, 
	///<summary><para>Outbound Consumer Service</para>
	///<para>Value = 23</para></summary>
	[Description("Outbound Consumer Service")]
	OutboundConsumerService = 23, 
	///<summary><para>Petrochemical Extraction and Distribution</para>
	///<para>Value = 24</para></summary>
	[Description("Petrochemical Extraction and Distribution")]
	PetrochemicalExtractionAndDistribution = 24, 
	///<summary><para>Service Retail</para>
	///<para>Value = 25</para></summary>
	[Description("Service Retail")]
	ServiceRetail = 25, 
	///<summary><para>SIG Affiliations</para>
	///<para>Value = 26</para></summary>
	[Description("SIG Affiliations")]
	SIGAffiliations = 26, 
	///<summary><para>Social Services</para>
	///<para>Value = 27</para></summary>
	[Description("Social Services")]
	SocialServices = 27, 
	///<summary><para>Special Outbound Trade Contractors</para>
	///<para>Value = 28</para></summary>
	[Description("Special Outbound Trade Contractors")]
	SpecialOutboundTradeContractors = 28, 
	///<summary><para>Specialty Realty</para>
	///<para>Value = 29</para></summary>
	[Description("Specialty Realty")]
	SpecialtyRealty = 29, 
	///<summary><para>Transportation</para>
	///<para>Value = 30</para></summary>
	[Description("Transportation")]
	Transportation = 30, 
	///<summary><para>Utility Creation and Distribution</para>
	///<para>Value = 31</para></summary>
	[Description("Utility Creation and Distribution")]
	UtilityCreationAndDistribution = 31, 
	///<summary><para>Vehicle Retail</para>
	///<para>Value = 32</para></summary>
	[Description("Vehicle Retail")]
	VehicleRetail = 32, 
	///<summary><para>Wholesale</para>
	///<para>Value = 33</para></summary>
	[Description("Wholesale")]
	Wholesale = 33
}
public enum eOwnership
{
	///<summary><para>Public</para>
	///<para>Value = 1</para></summary>
	[Description("Public")]
	@Public = 1, 
	///<summary><para>Private</para>
	///<para>Value = 2</para></summary>
	[Description("Private")]
	@Private = 2, 
	///<summary><para>Subsidiary</para>
	///<para>Value = 3</para></summary>
	[Description("Subsidiary")]
	Subsidiary = 3, 
	///<summary><para>Other</para>
	///<para>Value = 4</para></summary>
	[Description("Other")]
	Other = 4
}
public enum ePaymentTerms
{
	///<summary><para>Net 30</para>
	///<para>Value = 1</para></summary>
	[Description("Net 30")]
	Net30 = 1, 
	///<summary><para>2% 10, Net 30</para>
	///<para>Value = 2</para></summary>
	[Description("2% 10, Net 30")]
	_2_10_Net30 = 2, 
	///<summary><para>Net 45</para>
	///<para>Value = 3</para></summary>
	[Description("Net 45")]
	Net45 = 3, 
	///<summary><para>Net 60</para>
	///<para>Value = 4</para></summary>
	[Description("Net 60")]
	Net60 = 4
}
public enum ePreferredDay
{
	///<summary><para>Sunday</para>
	///<para>Value = 0</para></summary>
	[Description("Sunday")]
	Sunday = 0, 
	///<summary><para>Monday</para>
	///<para>Value = 1</para></summary>
	[Description("Monday")]
	Monday = 1, 
	///<summary><para>Tuesday</para>
	///<para>Value = 2</para></summary>
	[Description("Tuesday")]
	Tuesday = 2, 
	///<summary><para>Wednesday</para>
	///<para>Value = 3</para></summary>
	[Description("Wednesday")]
	Wednesday = 3, 
	///<summary><para>Thursday</para>
	///<para>Value = 4</para></summary>
	[Description("Thursday")]
	Thursday = 4, 
	///<summary><para>Friday</para>
	///<para>Value = 5</para></summary>
	[Description("Friday")]
	Friday = 5, 
	///<summary><para>Saturday</para>
	///<para>Value = 6</para></summary>
	[Description("Saturday")]
	Saturday = 6
}
public enum ePreferredMethodOfContact
{
	///<summary><para>Any</para>
	///<para>Value = 1</para></summary>
	[Description("Any")]
	Any = 1, 
	///<summary><para>Email</para>
	///<para>Value = 2</para></summary>
	[Description("Email")]
	Email = 2, 
	///<summary><para>Phone</para>
	///<para>Value = 3</para></summary>
	[Description("Phone")]
	Phone = 3, 
	///<summary><para>Fax</para>
	///<para>Value = 4</para></summary>
	[Description("Fax")]
	Fax = 4, 
	///<summary><para>Mail</para>
	///<para>Value = 5</para></summary>
	[Description("Mail")]
	Mail = 5
}
public enum ePreferredTime
{
	///<summary><para>Morning</para>
	///<para>Value = 1</para></summary>
	[Description("Morning")]
	Morning = 1, 
	///<summary><para>Afternoon</para>
	///<para>Value = 2</para></summary>
	[Description("Afternoon")]
	Afternoon = 2, 
	///<summary><para>Evening</para>
	///<para>Value = 3</para></summary>
	[Description("Evening")]
	Evening = 3
}
public enum eRelationshipType
{
	///<summary><para>Competitor</para>
	///<para>Value = 1</para></summary>
	[Description("Competitor")]
	Competitor = 1, 
	///<summary><para>Consultant</para>
	///<para>Value = 2</para></summary>
	[Description("Consultant")]
	Consultant = 2, 
	///<summary><para>Customer</para>
	///<para>Value = 3</para></summary>
	[Description("Customer")]
	Customer = 3, 
	///<summary><para>Investor</para>
	///<para>Value = 4</para></summary>
	[Description("Investor")]
	Investor = 4, 
	///<summary><para>Partner</para>
	///<para>Value = 5</para></summary>
	[Description("Partner")]
	Partner = 5, 
	///<summary><para>Influencer</para>
	///<para>Value = 6</para></summary>
	[Description("Influencer")]
	Influencer = 6, 
	///<summary><para>Press</para>
	///<para>Value = 7</para></summary>
	[Description("Press")]
	Press = 7, 
	///<summary><para>Prospect</para>
	///<para>Value = 8</para></summary>
	[Description("Prospect")]
	Prospect = 8, 
	///<summary><para>Reseller</para>
	///<para>Value = 9</para></summary>
	[Description("Reseller")]
	Reseller = 9, 
	///<summary><para>Supplier</para>
	///<para>Value = 10</para></summary>
	[Description("Supplier")]
	Supplier = 10, 
	///<summary><para>Vendor</para>
	///<para>Value = 11</para></summary>
	[Description("Vendor")]
	Vendor = 11, 
	///<summary><para>Other</para>
	///<para>Value = 12</para></summary>
	[Description("Other")]
	Other = 12
}
public enum eShippingMethod
{
	///<summary><para>Default Value</para>
	///<para>Value = 1</para></summary>
	[Description("Default Value")]
	DefaultValue = 1
}
public enum eStatus
{
	///<summary><para>Active</para>
	///<para>Value = 0</para></summary>
	[Description("Active")]
	Active = 0, 
	///<summary><para>Inactive</para>
	///<para>Value = 1</para></summary>
	[Description("Inactive")]
	Inactive = 1
}
public enum eStatusReason
{
	///<summary><para>Active</para>
	///<para>Value = 1</para></summary>
	[Description("Active")]
	Active_Active = 1, 
	///<summary><para>Inactive</para>
	///<para>Value = 2</para></summary>
	[Description("Inactive")]
	Inactive_Inactive = 2
}
public enum eTerritoryCode
{
	///<summary><para>Default Value</para>
	///<para>Value = 1</para></summary>
	[Description("Default Value")]
	DefaultValue = 1
}
public void SetState(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	Service.SetState(this, (int)State, (int)Status);
}
public async System.Threading.Tasks.Task SetStateAsync(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	 await Service.SetStateAsync(this, (int)State, (int)Status);
}


        public static class Properties
{
	/// <summary><para>masteraccountidyominame</para>
	/// <para>masteraccountidyominame</para></summary>
	public const string MasterAccountIdYomiName = "masteraccountidyominame";
	/// <summary><para>createdbyexternalpartyname</para>
	/// <para>createdbyexternalpartyname</para></summary>
	public const string CreatedByExternalPartyName = "createdbyexternalpartyname";
	/// <summary><para>entityimage_timestamp</para>
	/// <para>entityimage_timestamp</para></summary>
	public const string EntityImage_Timestamp = "entityimage_timestamp";
	/// <summary><para>modifiedbyyominame</para>
	/// <para>modifiedbyyominame</para></summary>
	public const string ModifiedByYomiName = "modifiedbyyominame";
	/// <summary><para>nhs_countryidname</para>
	/// <para>nhs_countryidname</para></summary>
	public const string Nhs_CountryIdName = "nhs_countryidname";
	/// <summary><para>primarycontactidname</para>
	/// <para>primarycontactidname</para></summary>
	public const string PrimaryContactIdName = "primarycontactidname";
	/// <summary><para>preferredsystemuseridyominame</para>
	/// <para>preferredsystemuseridyominame</para></summary>
	public const string PreferredSystemUserIdYomiName = "preferredsystemuseridyominame";
	/// <summary><para>modifiedbyexternalpartyyominame</para>
	/// <para>modifiedbyexternalpartyyominame</para></summary>
	public const string ModifiedByExternalPartyYomiName = "modifiedbyexternalpartyyominame";
	/// <summary><para>masteraccountidname</para>
	/// <para>masteraccountidname</para></summary>
	public const string MasterAccountIdName = "masteraccountidname";
	/// <summary><para>preferredsystemuseridname</para>
	/// <para>preferredsystemuseridname</para></summary>
	public const string PreferredSystemUserIdName = "preferredsystemuseridname";
	/// <summary><para>preferredserviceidname</para>
	/// <para>preferredserviceidname</para></summary>
	public const string PreferredServiceIdName = "preferredserviceidname";
	/// <summary><para>originatingleadidname</para>
	/// <para>originatingleadidname</para></summary>
	public const string OriginatingLeadIdName = "originatingleadidname";
	/// <summary><para>parentaccountidname</para>
	/// <para>parentaccountidname</para></summary>
	public const string ParentAccountIdName = "parentaccountidname";
	/// <summary><para>modifiedbyexternalpartyname</para>
	/// <para>modifiedbyexternalpartyname</para></summary>
	public const string ModifiedByExternalPartyName = "modifiedbyexternalpartyname";
	/// <summary><para>slaname</para>
	/// <para>slaname</para></summary>
	public const string SLAName = "slaname";
	/// <summary><para>slainvokedidname</para>
	/// <para>slainvokedidname</para></summary>
	public const string SLAInvokedIdName = "slainvokedidname";
	/// <summary><para>owneridyominame</para>
	/// <para>owneridyominame</para></summary>
	public const string OwnerIdYomiName = "owneridyominame";
	/// <summary><para>entityimage_url</para>
	/// <para>entityimage_url</para></summary>
	public const string EntityImage_URL = "entityimage_url";
	/// <summary><para>nhs_teamyominame</para>
	/// <para>nhs_teamyominame</para></summary>
	public const string Nhs_TeamYomiName = "nhs_teamyominame";
	/// <summary><para>createdbyexternalpartyyominame</para>
	/// <para>createdbyexternalpartyyominame</para></summary>
	public const string CreatedByExternalPartyYomiName = "createdbyexternalpartyyominame";
	/// <summary><para>originatingleadidyominame</para>
	/// <para>originatingleadidyominame</para></summary>
	public const string OriginatingLeadIdYomiName = "originatingleadidyominame";
	/// <summary><para>preferredequipmentidname</para>
	/// <para>preferredequipmentidname</para></summary>
	public const string PreferredEquipmentIdName = "preferredequipmentidname";
	/// <summary><para>territoryidname</para>
	/// <para>territoryidname</para></summary>
	public const string TerritoryIdName = "territoryidname";
	/// <summary><para>createdonbehalfbyname</para>
	/// <para>createdonbehalfbyname</para></summary>
	public const string CreatedOnBehalfByName = "createdonbehalfbyname";
	/// <summary><para>owneridname</para>
	/// <para>owneridname</para></summary>
	public const string OwnerIdName = "owneridname";
	/// <summary><para>modifiedonbehalfbyname</para>
	/// <para>modifiedonbehalfbyname</para></summary>
	public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
	/// <summary><para>transactioncurrencyidname</para>
	/// <para>transactioncurrencyidname</para></summary>
	public const string TransactionCurrencyIdName = "transactioncurrencyidname";
	/// <summary><para>createdonbehalfbyyominame</para>
	/// <para>createdonbehalfbyyominame</para></summary>
	public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
	/// <summary><para>owneridtype</para>
	/// <para>owneridtype</para></summary>
	public const string OwnerIdType = "owneridtype";
	/// <summary><para>createdbyname</para>
	/// <para>createdbyname</para></summary>
	public const string CreatedByName = "createdbyname";
	/// <summary><para>defaultpricelevelidname</para>
	/// <para>defaultpricelevelidname</para></summary>
	public const string DefaultPriceLevelIdName = "defaultpricelevelidname";
	/// <summary><para>nhs_teamname</para>
	/// <para>nhs_teamname</para></summary>
	public const string Nhs_TeamName = "nhs_teamname";
	/// <summary><para>primarycontactidyominame</para>
	/// <para>primarycontactidyominame</para></summary>
	public const string PrimaryContactIdYomiName = "primarycontactidyominame";
	/// <summary><para>modifiedbyname</para>
	/// <para>modifiedbyname</para></summary>
	public const string ModifiedByName = "modifiedbyname";
	/// <summary><para>isprivate</para>
	/// <para>isprivate</para></summary>
	public const string IsPrivate = "isprivate";
	/// <summary><para>createdbyyominame</para>
	/// <para>createdbyyominame</para></summary>
	public const string CreatedByYomiName = "createdbyyominame";
	/// <summary><para>modifiedonbehalfbyyominame</para>
	/// <para>modifiedonbehalfbyyominame</para></summary>
	public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
	/// <summary><para>parentaccountidyominame</para>
	/// <para>parentaccountidyominame</para></summary>
	public const string ParentAccountIdYomiName = "parentaccountidyominame";
	/// <summary><para>(Deprecated) Process Stage</para>
	/// <para>stageid</para></summary>
	public const string _Deprecated_ProcessStage = "stageid";
	/// <summary><para>(Deprecated) Traversed Path</para>
	/// <para>traversedpath</para></summary>
	public const string _Deprecated_TraversedPath = "traversedpath";
	/// <summary><para>Account</para>
	/// <para>accountid</para></summary>
	public const string AccountId = "accountid";
	/// <summary><para>Account Name</para>
	/// <para>name</para></summary>
	public const string AccountName = "name";
	/// <summary><para>Account Number</para>
	/// <para>accountnumber</para></summary>
	public const string AccountNumber = "accountnumber";
	/// <summary><para>Account Rating</para>
	/// <para>accountratingcode</para></summary>
	public const string AccountRating = "accountratingcode";
	/// <summary><para>Address 1: Address Type</para>
	/// <para>address1_addresstypecode</para></summary>
	public const string Address1_AddressType = "address1_addresstypecode";
	/// <summary><para>Address 1: County</para>
	/// <para>address1_county</para></summary>
	public const string Address1_County = "address1_county";
	/// <summary><para>Address 1: Fax</para>
	/// <para>address1_fax</para></summary>
	public const string Address1_Fax = "address1_fax";
	/// <summary><para>Address 1: Freight Terms</para>
	/// <para>address1_freighttermscode</para></summary>
	public const string Address1_FreightTerms = "address1_freighttermscode";
	/// <summary><para>Address 1: ID</para>
	/// <para>address1_addressid</para></summary>
	public const string Address1_ID = "address1_addressid";
	/// <summary><para>Address 1: Latitude</para>
	/// <para>address1_latitude</para></summary>
	public const string Address1_Latitude = "address1_latitude";
	/// <summary><para>Address 1: Longitude</para>
	/// <para>address1_longitude</para></summary>
	public const string Address1_Longitude = "address1_longitude";
	/// <summary><para>Address 1: Name</para>
	/// <para>address1_name</para></summary>
	public const string Address1_Name = "address1_name";
	/// <summary><para>Address 1: Post Office Box</para>
	/// <para>address1_postofficebox</para></summary>
	public const string Address1_PostOfficeBox = "address1_postofficebox";
	/// <summary><para>Address 1: Primary Contact Name</para>
	/// <para>address1_primarycontactname</para></summary>
	public const string Address1_PrimaryContactName = "address1_primarycontactname";
	/// <summary><para>Address 1: Shipping Method</para>
	/// <para>address1_shippingmethodcode</para></summary>
	public const string Address1_ShippingMethod = "address1_shippingmethodcode";
	/// <summary><para>Address 1: State/Province</para>
	/// <para>address1_stateorprovince</para></summary>
	public const string Address1_State_Province = "address1_stateorprovince";
	/// <summary><para>Address 1: Telephone 2</para>
	/// <para>address1_telephone2</para></summary>
	public const string Address1_Telephone2 = "address1_telephone2";
	/// <summary><para>Address 1: Telephone 3</para>
	/// <para>address1_telephone3</para></summary>
	public const string Address1_Telephone3 = "address1_telephone3";
	/// <summary><para>Address 1: UPS Zone</para>
	/// <para>address1_upszone</para></summary>
	public const string Address1_UPSZone = "address1_upszone";
	/// <summary><para>Address 1: UTC Offset</para>
	/// <para>address1_utcoffset</para></summary>
	public const string Address1_UTCOffset = "address1_utcoffset";
	/// <summary><para>Address 2</para>
	/// <para>address2_composite</para></summary>
	public const string Address2 = "address2_composite";
	/// <summary><para>Address 2: Address Type</para>
	/// <para>address2_addresstypecode</para></summary>
	public const string Address2_AddressType = "address2_addresstypecode";
	/// <summary><para>Address 2: City</para>
	/// <para>address2_city</para></summary>
	public const string Address2_City = "address2_city";
	/// <summary><para>Address 2: Country/Region</para>
	/// <para>address2_country</para></summary>
	public const string Address2_Country_Region = "address2_country";
	/// <summary><para>Address 2: County</para>
	/// <para>address2_county</para></summary>
	public const string Address2_County = "address2_county";
	/// <summary><para>Address 2: Fax</para>
	/// <para>address2_fax</para></summary>
	public const string Address2_Fax = "address2_fax";
	/// <summary><para>Address 2: Freight Terms</para>
	/// <para>address2_freighttermscode</para></summary>
	public const string Address2_FreightTerms = "address2_freighttermscode";
	/// <summary><para>Address 2: ID</para>
	/// <para>address2_addressid</para></summary>
	public const string Address2_ID = "address2_addressid";
	/// <summary><para>Address 2: Latitude</para>
	/// <para>address2_latitude</para></summary>
	public const string Address2_Latitude = "address2_latitude";
	/// <summary><para>Address 2: Longitude</para>
	/// <para>address2_longitude</para></summary>
	public const string Address2_Longitude = "address2_longitude";
	/// <summary><para>Address 2: Name</para>
	/// <para>address2_name</para></summary>
	public const string Address2_Name = "address2_name";
	/// <summary><para>Address 2: Post Office Box</para>
	/// <para>address2_postofficebox</para></summary>
	public const string Address2_PostOfficeBox = "address2_postofficebox";
	/// <summary><para>Address 2: Primary Contact Name</para>
	/// <para>address2_primarycontactname</para></summary>
	public const string Address2_PrimaryContactName = "address2_primarycontactname";
	/// <summary><para>Address 2: Shipping Method</para>
	/// <para>address2_shippingmethodcode</para></summary>
	public const string Address2_ShippingMethod = "address2_shippingmethodcode";
	/// <summary><para>Address 2: State/Province</para>
	/// <para>address2_stateorprovince</para></summary>
	public const string Address2_State_Province = "address2_stateorprovince";
	/// <summary><para>Address 2: Street 1</para>
	/// <para>address2_line1</para></summary>
	public const string Address2_Street1 = "address2_line1";
	/// <summary><para>Address 2: Street 2</para>
	/// <para>address2_line2</para></summary>
	public const string Address2_Street2 = "address2_line2";
	/// <summary><para>Address 2: Street 3</para>
	/// <para>address2_line3</para></summary>
	public const string Address2_Street3 = "address2_line3";
	/// <summary><para>Address 2: Telephone 1</para>
	/// <para>address2_telephone1</para></summary>
	public const string Address2_Telephone1 = "address2_telephone1";
	/// <summary><para>Address 2: Telephone 2</para>
	/// <para>address2_telephone2</para></summary>
	public const string Address2_Telephone2 = "address2_telephone2";
	/// <summary><para>Address 2: Telephone 3</para>
	/// <para>address2_telephone3</para></summary>
	public const string Address2_Telephone3 = "address2_telephone3";
	/// <summary><para>Address 2: UPS Zone</para>
	/// <para>address2_upszone</para></summary>
	public const string Address2_UPSZone = "address2_upszone";
	/// <summary><para>Address 2: UTC Offset</para>
	/// <para>address2_utcoffset</para></summary>
	public const string Address2_UTCOffset = "address2_utcoffset";
	/// <summary><para>Address 2: ZIP/Postal Code</para>
	/// <para>address2_postalcode</para></summary>
	public const string Address2_ZIP_PostalCode = "address2_postalcode";
	/// <summary><para>Address Composite</para>
	/// <para>address1_composite</para></summary>
	public const string AddressComposite = "address1_composite";
	/// <summary><para>Address Line 1</para>
	/// <para>address1_line1</para></summary>
	public const string AddressLine1 = "address1_line1";
	/// <summary><para>Address Line 2</para>
	/// <para>address1_line2</para></summary>
	public const string AddressLine2 = "address1_line2";
	/// <summary><para>Address Line 3</para>
	/// <para>address1_line3</para></summary>
	public const string AddressLine3 = "address1_line3";
	/// <summary><para>Address Phone</para>
	/// <para>address1_telephone1</para></summary>
	public const string AddressPhone = "address1_telephone1";
	/// <summary><para>Aging 30</para>
	/// <para>aging30</para></summary>
	public const string Aging30 = "aging30";
	/// <summary><para>Aging 30 (Base)</para>
	/// <para>aging30_base</para></summary>
	public const string Aging30_Base = "aging30_base";
	/// <summary><para>Aging 60</para>
	/// <para>aging60</para></summary>
	public const string Aging60 = "aging60";
	/// <summary><para>Aging 60 (Base)</para>
	/// <para>aging60_base</para></summary>
	public const string Aging60_Base = "aging60_base";
	/// <summary><para>Aging 90</para>
	/// <para>aging90</para></summary>
	public const string Aging90 = "aging90";
	/// <summary><para>Aging 90 (Base)</para>
	/// <para>aging90_base</para></summary>
	public const string Aging90_Base = "aging90_base";
	/// <summary><para>Annual Revenue</para>
	/// <para>revenue</para></summary>
	public const string AnnualRevenue = "revenue";
	/// <summary><para>Annual Revenue (Base)</para>
	/// <para>revenue_base</para></summary>
	public const string AnnualRevenue_Base = "revenue_base";
	/// <summary><para>Business Type</para>
	/// <para>businesstypecode</para></summary>
	public const string BusinessType = "businesstypecode";
	/// <summary><para>Category</para>
	/// <para>accountcategorycode</para></summary>
	public const string Category = "accountcategorycode";
	/// <summary><para>City</para>
	/// <para>address1_city</para></summary>
	public const string City = "address1_city";
	/// <summary><para>Classification</para>
	/// <para>accountclassificationcode</para></summary>
	public const string Classification = "accountclassificationcode";
	/// <summary><para>Country</para>
	/// <para>nhs_countryid</para></summary>
	public const string Country = "nhs_countryid";
	/// <summary><para>Country/Region</para>
	/// <para>address1_country</para></summary>
	public const string Country_Region = "address1_country";
	/// <summary><para>Created By</para>
	/// <para>createdby</para></summary>
	public const string CreatedBy = "createdby";
	/// <summary><para>Created By (Delegate)</para>
	/// <para>createdonbehalfby</para></summary>
	public const string CreatedBy_Delegate = "createdonbehalfby";
	/// <summary><para>Created By (External Party)</para>
	/// <para>createdbyexternalparty</para></summary>
	public const string CreatedBy_ExternalParty = "createdbyexternalparty";
	/// <summary><para>Created On</para>
	/// <para>createdon</para></summary>
	public const string CreatedOn = "createdon";
	/// <summary><para>Credit Hold</para>
	/// <para>creditonhold</para></summary>
	public const string CreditHold = "creditonhold";
	/// <summary><para>Credit Limit</para>
	/// <para>creditlimit</para></summary>
	public const string CreditLimit = "creditlimit";
	/// <summary><para>Credit Limit (Base)</para>
	/// <para>creditlimit_base</para></summary>
	public const string CreditLimit_Base = "creditlimit_base";
	/// <summary><para>Currency</para>
	/// <para>transactioncurrencyid</para></summary>
	public const string Currency = "transactioncurrencyid";
	/// <summary><para>Customer Size</para>
	/// <para>customersizecode</para></summary>
	public const string CustomerSize = "customersizecode";
	/// <summary><para>Description</para>
	/// <para>description</para></summary>
	public const string Description = "description";
	/// <summary><para>Do not allow Bulk Emails</para>
	/// <para>donotbulkemail</para></summary>
	public const string DoNotAllowBulkEmails = "donotbulkemail";
	/// <summary><para>Do not allow Bulk Mails</para>
	/// <para>donotbulkpostalmail</para></summary>
	public const string DoNotAllowBulkMails = "donotbulkpostalmail";
	/// <summary><para>Do not allow Emails</para>
	/// <para>donotemail</para></summary>
	public const string DoNotAllowEmails = "donotemail";
	/// <summary><para>Do not allow Faxes</para>
	/// <para>donotfax</para></summary>
	public const string DoNotAllowFaxes = "donotfax";
	/// <summary><para>Do not allow Mails</para>
	/// <para>donotpostalmail</para></summary>
	public const string DoNotAllowMails = "donotpostalmail";
	/// <summary><para>Do not allow Phone Calls</para>
	/// <para>donotphone</para></summary>
	public const string DoNotAllowPhoneCalls = "donotphone";
	/// <summary><para>Email</para>
	/// <para>emailaddress1</para></summary>
	public const string Email = "emailaddress1";
	/// <summary><para>Email Address 2</para>
	/// <para>emailaddress2</para></summary>
	public const string EmailAddress2 = "emailaddress2";
	/// <summary><para>Email Address 3</para>
	/// <para>emailaddress3</para></summary>
	public const string EmailAddress3 = "emailaddress3";
	/// <summary><para>Entity Image Id</para>
	/// <para>entityimageid</para></summary>
	public const string EntityImageId = "entityimageid";
	/// <summary><para>Exchange Rate</para>
	/// <para>exchangerate</para></summary>
	public const string ExchangeRate = "exchangerate";
	/// <summary><para>Fax</para>
	/// <para>fax</para></summary>
	public const string Fax = "fax";
	/// <summary><para>Follow Email Activity</para>
	/// <para>followemail</para></summary>
	public const string FollowEmailActivity = "followemail";
	/// <summary><para>FTP Site</para>
	/// <para>ftpsiteurl</para></summary>
	public const string FTPSite = "ftpsiteurl";
	/// <summary><para>Import Sequence Number</para>
	/// <para>importsequencenumber</para></summary>
	public const string ImportSequenceNumber = "importsequencenumber";
	/// <summary><para>Industry</para>
	/// <para>industrycode</para></summary>
	public const string Industry = "industrycode";
	/// <summary><para>Last Date Included in Campaign</para>
	/// <para>lastusedincampaign</para></summary>
	public const string LastDateIncludedInCampaign = "lastusedincampaign";
	/// <summary><para>Last On Hold Time</para>
	/// <para>lastonholdtime</para></summary>
	public const string LastOnHoldTime = "lastonholdtime";
	/// <summary><para>Last SLA applied</para>
	/// <para>slainvokedid</para></summary>
	public const string LastSLAApplied = "slainvokedid";
	/// <summary><para>Main Phone</para>
	/// <para>telephone1</para></summary>
	public const string MainPhone = "telephone1";
	/// <summary><para>Market Capitalization</para>
	/// <para>marketcap</para></summary>
	public const string MarketCapitalization = "marketcap";
	/// <summary><para>Market Capitalization (Base)</para>
	/// <para>marketcap_base</para></summary>
	public const string MarketCapitalization_Base = "marketcap_base";
	/// <summary><para>Marketing Only</para>
	/// <para>marketingonly</para></summary>
	public const string MarketingOnly = "marketingonly";
	/// <summary><para>Master ID</para>
	/// <para>masterid</para></summary>
	public const string MasterID = "masterid";
	/// <summary><para>Merged</para>
	/// <para>merged</para></summary>
	public const string Merged = "merged";
	/// <summary><para>Modified By</para>
	/// <para>modifiedby</para></summary>
	public const string ModifiedBy = "modifiedby";
	/// <summary><para>Modified By (Delegate)</para>
	/// <para>modifiedonbehalfby</para></summary>
	public const string ModifiedBy_Delegate = "modifiedonbehalfby";
	/// <summary><para>Modified By (External Party)</para>
	/// <para>modifiedbyexternalparty</para></summary>
	public const string ModifiedBy_ExternalParty = "modifiedbyexternalparty";
	/// <summary><para>Modified On</para>
	/// <para>modifiedon</para></summary>
	public const string ModifiedOn = "modifiedon";
	/// <summary><para>Number of Employees</para>
	/// <para>numberofemployees</para></summary>
	public const string NumberOfEmployees = "numberofemployees";
	/// <summary><para>On Hold Time (Minutes)</para>
	/// <para>onholdtime</para></summary>
	public const string OnHoldTime_Minutes = "onholdtime";
	/// <summary><para>Open Deals</para>
	/// <para>opendeals</para></summary>
	public const string OpenDeals = "opendeals";
	/// <summary><para>Open Deals (Last Updated On)</para>
	/// <para>opendeals_date</para></summary>
	public const string OpenDeals_LastUpdatedOn = "opendeals_date";
	/// <summary><para>Open Deals (State)</para>
	/// <para>opendeals_state</para></summary>
	public const string OpenDeals_State = "opendeals_state";
	/// <summary><para>Open Revenue</para>
	/// <para>openrevenue</para></summary>
	public const string OpenRevenue = "openrevenue";
	/// <summary><para>Open Revenue (Base)</para>
	/// <para>openrevenue_base</para></summary>
	public const string OpenRevenue_Base = "openrevenue_base";
	/// <summary><para>Open Revenue (Last Updated On)</para>
	/// <para>openrevenue_date</para></summary>
	public const string OpenRevenue_LastUpdatedOn = "openrevenue_date";
	/// <summary><para>Open Revenue (State)</para>
	/// <para>openrevenue_state</para></summary>
	public const string OpenRevenue_State = "openrevenue_state";
	/// <summary><para>Originating Lead</para>
	/// <para>originatingleadid</para></summary>
	public const string OriginatingLead = "originatingleadid";
	/// <summary><para>Other Phone</para>
	/// <para>telephone2</para></summary>
	public const string OtherPhone = "telephone2";
	/// <summary><para>Owner</para>
	/// <para>ownerid</para></summary>
	public const string Owner = "ownerid";
	/// <summary><para>Ownership</para>
	/// <para>ownershipcode</para></summary>
	public const string Ownership = "ownershipcode";
	/// <summary><para>Owning Business Unit</para>
	/// <para>owningbusinessunit</para></summary>
	public const string OwningBusinessUnit = "owningbusinessunit";
	/// <summary><para>Owning Team</para>
	/// <para>owningteam</para></summary>
	public const string OwningTeam = "owningteam";
	/// <summary><para>Owning User</para>
	/// <para>owninguser</para></summary>
	public const string OwningUser = "owninguser";
	/// <summary><para>Panel Code Prefix (Retired)</para>
	/// <para>nhs_panelcodeprefix</para></summary>
	public const string PanelCodePrefix_Retired = "nhs_panelcodeprefix";
	/// <summary><para>Parent Account</para>
	/// <para>parentaccountid</para></summary>
	public const string ParentAccount = "parentaccountid";
	/// <summary><para>Participates in Workflow</para>
	/// <para>participatesinworkflow</para></summary>
	public const string ParticipatesInWorkflow = "participatesinworkflow";
	/// <summary><para>Payment Terms</para>
	/// <para>paymenttermscode</para></summary>
	public const string PaymentTerms = "paymenttermscode";
	/// <summary><para>Postal/ZIP Code</para>
	/// <para>address1_postalcode</para></summary>
	public const string Postal_ZIPCode = "address1_postalcode";
	/// <summary><para>Preferred Day</para>
	/// <para>preferredappointmentdaycode</para></summary>
	public const string PreferredDay = "preferredappointmentdaycode";
	/// <summary><para>Preferred Facility/Equipment</para>
	/// <para>preferredequipmentid</para></summary>
	public const string PreferredFacility_Equipment = "preferredequipmentid";
	/// <summary><para>Preferred Method of Contact</para>
	/// <para>preferredcontactmethodcode</para></summary>
	public const string PreferredMethodOfContact = "preferredcontactmethodcode";
	/// <summary><para>Preferred Service</para>
	/// <para>preferredserviceid</para></summary>
	public const string PreferredService = "preferredserviceid";
	/// <summary><para>Preferred Time</para>
	/// <para>preferredappointmenttimecode</para></summary>
	public const string PreferredTime = "preferredappointmenttimecode";
	/// <summary><para>Preferred User</para>
	/// <para>preferredsystemuserid</para></summary>
	public const string PreferredUser = "preferredsystemuserid";
	/// <summary><para>Price List</para>
	/// <para>defaultpricelevelid</para></summary>
	public const string PriceList = "defaultpricelevelid";
	/// <summary><para>Primary Contact</para>
	/// <para>primarycontactid</para></summary>
	public const string PrimaryContact = "primarycontactid";
	/// <summary><para>Primary Satori ID</para>
	/// <para>primarysatoriid</para></summary>
	public const string PrimarySatoriID = "primarysatoriid";
	/// <summary><para>Primary Twitter ID</para>
	/// <para>primarytwitterid</para></summary>
	public const string PrimaryTwitterID = "primarytwitterid";
	/// <summary><para>Process</para>
	/// <para>processid</para></summary>
	public const string Process = "processid";
	/// <summary><para>Record Created On</para>
	/// <para>overriddencreatedon</para></summary>
	public const string RecordCreatedOn = "overriddencreatedon";
	/// <summary><para>Relationship Type</para>
	/// <para>customertypecode</para></summary>
	public const string RelationshipType = "customertypecode";
	/// <summary><para>Send Marketing Materials</para>
	/// <para>donotsendmm</para></summary>
	public const string SendMarketingMaterials = "donotsendmm";
	/// <summary><para>Shares Outstanding</para>
	/// <para>sharesoutstanding</para></summary>
	public const string SharesOutstanding = "sharesoutstanding";
	/// <summary><para>Shipping Method</para>
	/// <para>shippingmethodcode</para></summary>
	public const string ShippingMethod = "shippingmethodcode";
	/// <summary><para>SIC Code</para>
	/// <para>sic</para></summary>
	public const string SICCode = "sic";
	/// <summary><para>SLA</para>
	/// <para>slaid</para></summary>
	public const string SLA = "slaid";
	/// <summary><para>Status</para>
	/// <para>statecode</para></summary>
	public const string Status = "statecode";
	/// <summary><para>Status Reason</para>
	/// <para>statuscode</para></summary>
	public const string StatusReason = "statuscode";
	/// <summary><para>Stock Exchange</para>
	/// <para>stockexchange</para></summary>
	public const string StockExchange = "stockexchange";
	/// <summary><para>Team</para>
	/// <para>nhs_team</para></summary>
	public const string Team = "nhs_team";
	/// <summary><para>TeamsFollowed</para>
	/// <para>teamsfollowed</para></summary>
	public const string TeamsFollowed = "teamsfollowed";
	/// <summary><para>Telephone 3</para>
	/// <para>telephone3</para></summary>
	public const string Telephone3 = "telephone3";
	/// <summary><para>Territory</para>
	/// <para>territoryid</para></summary>
	public const string Territory = "territoryid";
	/// <summary><para>Territory Code</para>
	/// <para>territorycode</para></summary>
	public const string TerritoryCode = "territorycode";
	/// <summary><para>Ticker Symbol</para>
	/// <para>tickersymbol</para></summary>
	public const string TickerSymbol = "tickersymbol";
	/// <summary><para>Time Spent by me</para>
	/// <para>timespentbymeonemailandmeetings</para></summary>
	public const string TimeSpentByMe = "timespentbymeonemailandmeetings";
	/// <summary><para>Time Zone Rule Version Number</para>
	/// <para>timezoneruleversionnumber</para></summary>
	public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
	/// <summary><para>UTC Conversion Time Zone Code</para>
	/// <para>utcconversiontimezonecode</para></summary>
	public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
	/// <summary><para>Version Number</para>
	/// <para>versionnumber</para></summary>
	public const string VersionNumber = "versionnumber";
	/// <summary><para>Website</para>
	/// <para>websiteurl</para></summary>
	public const string Website = "websiteurl";
	/// <summary><para>Yomi Account Name</para>
	/// <para>yominame</para></summary>
	public const string YomiAccountName = "yominame";
}

    }
}
